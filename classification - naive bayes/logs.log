2023-12-31 19:37:35,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:37:35,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:37:35,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:37:35,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:39:13,572:INFO:PyCaret RegressionExperiment
2023-12-31 19:39:13,572:INFO:Logging name: reg-default-name
2023-12-31 19:39:13,573:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:39:13,573:INFO:version 3.2.0
2023-12-31 19:39:13,573:INFO:Initializing setup()
2023-12-31 19:39:13,573:INFO:self.USI: b4c2
2023-12-31 19:39:13,573:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'html_param', 'seed', 'USI', 'y_train', 'logging_param', 'target_param', 'data', 'memory', 'X_test', 'fold_generator', 'X_train', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_param', 'exp_id', 'n_jobs_param', 'y', '_available_plots', 'X', 'transform_target_param', 'gpu_n_jobs_param', 'y_test'}
2023-12-31 19:39:13,573:INFO:Checking environment
2023-12-31 19:39:13,573:INFO:python_version: 3.10.13
2023-12-31 19:39:13,573:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:39:13,573:INFO:machine: AMD64
2023-12-31 19:39:13,573:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:39:13,580:INFO:Memory: svmem(total=8373600256, available=1537933312, percent=81.6, used=6835666944, free=1537933312)
2023-12-31 19:39:13,580:INFO:Physical Core: 4
2023-12-31 19:39:13,580:INFO:Logical Core: 8
2023-12-31 19:39:13,580:INFO:Checking libraries
2023-12-31 19:39:13,580:INFO:System:
2023-12-31 19:39:13,580:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:39:13,580:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:39:13,580:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:39:13,580:INFO:PyCaret required dependencies:
2023-12-31 19:39:13,683:INFO:                 pip: 23.3.1
2023-12-31 19:39:13,683:INFO:          setuptools: 68.2.2
2023-12-31 19:39:13,683:INFO:             pycaret: 3.2.0
2023-12-31 19:39:13,683:INFO:             IPython: 8.15.0
2023-12-31 19:39:13,683:INFO:          ipywidgets: 8.1.1
2023-12-31 19:39:13,683:INFO:                tqdm: 4.65.0
2023-12-31 19:39:13,683:INFO:               numpy: 1.25.2
2023-12-31 19:39:13,683:INFO:              pandas: 1.5.3
2023-12-31 19:39:13,683:INFO:              jinja2: 3.1.2
2023-12-31 19:39:13,684:INFO:               scipy: 1.10.1
2023-12-31 19:39:13,684:INFO:              joblib: 1.2.0
2023-12-31 19:39:13,684:INFO:             sklearn: 1.2.2
2023-12-31 19:39:13,684:INFO:                pyod: 1.1.2
2023-12-31 19:39:13,684:INFO:            imblearn: 0.11.0
2023-12-31 19:39:13,684:INFO:   category_encoders: 2.6.3
2023-12-31 19:39:13,684:INFO:            lightgbm: 4.2.0
2023-12-31 19:39:13,684:INFO:               numba: 0.58.1
2023-12-31 19:39:13,684:INFO:            requests: 2.31.0
2023-12-31 19:39:13,684:INFO:          matplotlib: 3.8.2
2023-12-31 19:39:13,684:INFO:          scikitplot: 0.3.7
2023-12-31 19:39:13,684:INFO:         yellowbrick: 1.5
2023-12-31 19:39:13,684:INFO:              plotly: 5.18.0
2023-12-31 19:39:13,684:INFO:    plotly-resampler: Not installed
2023-12-31 19:39:13,684:INFO:             kaleido: 0.2.1
2023-12-31 19:39:13,684:INFO:           schemdraw: 0.15
2023-12-31 19:39:13,684:INFO:         statsmodels: 0.14.1
2023-12-31 19:39:13,684:INFO:              sktime: 0.21.1
2023-12-31 19:39:13,684:INFO:               tbats: 1.1.3
2023-12-31 19:39:13,684:INFO:            pmdarima: 2.0.4
2023-12-31 19:39:13,684:INFO:              psutil: 5.9.0
2023-12-31 19:39:13,684:INFO:          markupsafe: 2.1.1
2023-12-31 19:39:13,685:INFO:             pickle5: Not installed
2023-12-31 19:39:13,685:INFO:         cloudpickle: 2.2.1
2023-12-31 19:39:13,685:INFO:         deprecation: 2.1.0
2023-12-31 19:39:13,685:INFO:              xxhash: 3.4.1
2023-12-31 19:39:13,685:INFO:           wurlitzer: Not installed
2023-12-31 19:39:13,685:INFO:PyCaret optional dependencies:
2023-12-31 19:39:13,767:INFO:                shap: Not installed
2023-12-31 19:39:13,767:INFO:           interpret: Not installed
2023-12-31 19:39:13,767:INFO:                umap: Not installed
2023-12-31 19:39:13,767:INFO:     ydata_profiling: Not installed
2023-12-31 19:39:13,767:INFO:  explainerdashboard: Not installed
2023-12-31 19:39:13,767:INFO:             autoviz: Not installed
2023-12-31 19:39:13,767:INFO:           fairlearn: Not installed
2023-12-31 19:39:13,767:INFO:          deepchecks: Not installed
2023-12-31 19:39:13,767:INFO:             xgboost: 2.0.3
2023-12-31 19:39:13,768:INFO:            catboost: Not installed
2023-12-31 19:39:13,768:INFO:              kmodes: Not installed
2023-12-31 19:39:13,768:INFO:             mlxtend: 0.23.0
2023-12-31 19:39:13,768:INFO:       statsforecast: Not installed
2023-12-31 19:39:13,768:INFO:        tune_sklearn: Not installed
2023-12-31 19:39:13,768:INFO:                 ray: Not installed
2023-12-31 19:39:13,768:INFO:            hyperopt: Not installed
2023-12-31 19:39:13,768:INFO:              optuna: Not installed
2023-12-31 19:39:13,768:INFO:               skopt: Not installed
2023-12-31 19:39:13,768:INFO:              mlflow: Not installed
2023-12-31 19:39:13,768:INFO:              gradio: Not installed
2023-12-31 19:39:13,768:INFO:             fastapi: Not installed
2023-12-31 19:39:13,768:INFO:             uvicorn: Not installed
2023-12-31 19:39:13,768:INFO:              m2cgen: Not installed
2023-12-31 19:39:13,768:INFO:           evidently: Not installed
2023-12-31 19:39:13,768:INFO:               fugue: Not installed
2023-12-31 19:39:13,768:INFO:           streamlit: Not installed
2023-12-31 19:39:13,768:INFO:             prophet: Not installed
2023-12-31 19:39:13,768:INFO:None
2023-12-31 19:39:13,768:INFO:Set up data.
2023-12-31 19:40:20,668:INFO:PyCaret RegressionExperiment
2023-12-31 19:40:20,668:INFO:Logging name: reg-default-name
2023-12-31 19:40:20,668:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:40:20,668:INFO:version 3.2.0
2023-12-31 19:40:20,668:INFO:Initializing setup()
2023-12-31 19:40:20,669:INFO:self.USI: e2ec
2023-12-31 19:40:20,669:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'html_param', 'seed', 'USI', 'y_train', 'logging_param', 'target_param', 'data', 'memory', 'X_test', 'fold_generator', 'X_train', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_param', 'exp_id', 'n_jobs_param', 'y', '_available_plots', 'X', 'transform_target_param', 'gpu_n_jobs_param', 'y_test'}
2023-12-31 19:40:20,669:INFO:Checking environment
2023-12-31 19:40:20,669:INFO:python_version: 3.10.13
2023-12-31 19:40:20,669:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:40:20,669:INFO:machine: AMD64
2023-12-31 19:40:20,669:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:40:20,672:INFO:Memory: svmem(total=8373600256, available=1451532288, percent=82.7, used=6922067968, free=1451532288)
2023-12-31 19:40:20,672:INFO:Physical Core: 4
2023-12-31 19:40:20,672:INFO:Logical Core: 8
2023-12-31 19:40:20,672:INFO:Checking libraries
2023-12-31 19:40:20,672:INFO:System:
2023-12-31 19:40:20,672:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:40:20,672:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:40:20,672:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:40:20,673:INFO:PyCaret required dependencies:
2023-12-31 19:40:20,673:INFO:                 pip: 23.3.1
2023-12-31 19:40:20,673:INFO:          setuptools: 68.2.2
2023-12-31 19:40:20,673:INFO:             pycaret: 3.2.0
2023-12-31 19:40:20,673:INFO:             IPython: 8.15.0
2023-12-31 19:40:20,673:INFO:          ipywidgets: 8.1.1
2023-12-31 19:40:20,673:INFO:                tqdm: 4.65.0
2023-12-31 19:40:20,673:INFO:               numpy: 1.25.2
2023-12-31 19:40:20,673:INFO:              pandas: 1.5.3
2023-12-31 19:40:20,673:INFO:              jinja2: 3.1.2
2023-12-31 19:40:20,673:INFO:               scipy: 1.10.1
2023-12-31 19:40:20,673:INFO:              joblib: 1.2.0
2023-12-31 19:40:20,673:INFO:             sklearn: 1.2.2
2023-12-31 19:40:20,673:INFO:                pyod: 1.1.2
2023-12-31 19:40:20,673:INFO:            imblearn: 0.11.0
2023-12-31 19:40:20,673:INFO:   category_encoders: 2.6.3
2023-12-31 19:40:20,673:INFO:            lightgbm: 4.2.0
2023-12-31 19:40:20,673:INFO:               numba: 0.58.1
2023-12-31 19:40:20,673:INFO:            requests: 2.31.0
2023-12-31 19:40:20,674:INFO:          matplotlib: 3.8.2
2023-12-31 19:40:20,674:INFO:          scikitplot: 0.3.7
2023-12-31 19:40:20,674:INFO:         yellowbrick: 1.5
2023-12-31 19:40:20,674:INFO:              plotly: 5.18.0
2023-12-31 19:40:20,674:INFO:    plotly-resampler: Not installed
2023-12-31 19:40:20,674:INFO:             kaleido: 0.2.1
2023-12-31 19:40:20,674:INFO:           schemdraw: 0.15
2023-12-31 19:40:20,674:INFO:         statsmodels: 0.14.1
2023-12-31 19:40:20,674:INFO:              sktime: 0.21.1
2023-12-31 19:40:20,674:INFO:               tbats: 1.1.3
2023-12-31 19:40:20,674:INFO:            pmdarima: 2.0.4
2023-12-31 19:40:20,674:INFO:              psutil: 5.9.0
2023-12-31 19:40:20,674:INFO:          markupsafe: 2.1.1
2023-12-31 19:40:20,674:INFO:             pickle5: Not installed
2023-12-31 19:40:20,674:INFO:         cloudpickle: 2.2.1
2023-12-31 19:40:20,674:INFO:         deprecation: 2.1.0
2023-12-31 19:40:20,674:INFO:              xxhash: 3.4.1
2023-12-31 19:40:20,674:INFO:           wurlitzer: Not installed
2023-12-31 19:40:20,674:INFO:PyCaret optional dependencies:
2023-12-31 19:40:20,674:INFO:                shap: Not installed
2023-12-31 19:40:20,674:INFO:           interpret: Not installed
2023-12-31 19:40:20,675:INFO:                umap: Not installed
2023-12-31 19:40:20,675:INFO:     ydata_profiling: Not installed
2023-12-31 19:40:20,675:INFO:  explainerdashboard: Not installed
2023-12-31 19:40:20,675:INFO:             autoviz: Not installed
2023-12-31 19:40:20,675:INFO:           fairlearn: Not installed
2023-12-31 19:40:20,675:INFO:          deepchecks: Not installed
2023-12-31 19:40:20,675:INFO:             xgboost: 2.0.3
2023-12-31 19:40:20,675:INFO:            catboost: Not installed
2023-12-31 19:40:20,675:INFO:              kmodes: Not installed
2023-12-31 19:40:20,675:INFO:             mlxtend: 0.23.0
2023-12-31 19:40:20,675:INFO:       statsforecast: Not installed
2023-12-31 19:40:20,676:INFO:        tune_sklearn: Not installed
2023-12-31 19:40:20,676:INFO:                 ray: Not installed
2023-12-31 19:40:20,676:INFO:            hyperopt: Not installed
2023-12-31 19:40:20,676:INFO:              optuna: Not installed
2023-12-31 19:40:20,676:INFO:               skopt: Not installed
2023-12-31 19:40:20,676:INFO:              mlflow: Not installed
2023-12-31 19:40:20,676:INFO:              gradio: Not installed
2023-12-31 19:40:20,676:INFO:             fastapi: Not installed
2023-12-31 19:40:20,676:INFO:             uvicorn: Not installed
2023-12-31 19:40:20,676:INFO:              m2cgen: Not installed
2023-12-31 19:40:20,676:INFO:           evidently: Not installed
2023-12-31 19:40:20,676:INFO:               fugue: Not installed
2023-12-31 19:40:20,676:INFO:           streamlit: Not installed
2023-12-31 19:40:20,676:INFO:             prophet: Not installed
2023-12-31 19:40:20,676:INFO:None
2023-12-31 19:40:20,676:INFO:Set up data.
2023-12-31 19:40:28,898:INFO:PyCaret RegressionExperiment
2023-12-31 19:40:28,899:INFO:Logging name: reg-default-name
2023-12-31 19:40:28,899:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:40:28,899:INFO:version 3.2.0
2023-12-31 19:40:28,899:INFO:Initializing setup()
2023-12-31 19:40:28,899:INFO:self.USI: 18ab
2023-12-31 19:40:28,899:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'html_param', 'seed', 'USI', 'y_train', 'logging_param', 'target_param', 'data', 'memory', 'X_test', 'fold_generator', 'X_train', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_param', 'exp_id', 'n_jobs_param', 'y', '_available_plots', 'X', 'transform_target_param', 'gpu_n_jobs_param', 'y_test'}
2023-12-31 19:40:28,899:INFO:Checking environment
2023-12-31 19:40:28,899:INFO:python_version: 3.10.13
2023-12-31 19:40:28,899:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:40:28,899:INFO:machine: AMD64
2023-12-31 19:40:28,899:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:40:28,902:INFO:Memory: svmem(total=8373600256, available=1450889216, percent=82.7, used=6922711040, free=1450889216)
2023-12-31 19:40:28,902:INFO:Physical Core: 4
2023-12-31 19:40:28,902:INFO:Logical Core: 8
2023-12-31 19:40:28,903:INFO:Checking libraries
2023-12-31 19:40:28,903:INFO:System:
2023-12-31 19:40:28,903:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:40:28,903:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:40:28,903:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:40:28,903:INFO:PyCaret required dependencies:
2023-12-31 19:40:28,903:INFO:                 pip: 23.3.1
2023-12-31 19:40:28,903:INFO:          setuptools: 68.2.2
2023-12-31 19:40:28,903:INFO:             pycaret: 3.2.0
2023-12-31 19:40:28,903:INFO:             IPython: 8.15.0
2023-12-31 19:40:28,903:INFO:          ipywidgets: 8.1.1
2023-12-31 19:40:28,903:INFO:                tqdm: 4.65.0
2023-12-31 19:40:28,903:INFO:               numpy: 1.25.2
2023-12-31 19:40:28,903:INFO:              pandas: 1.5.3
2023-12-31 19:40:28,903:INFO:              jinja2: 3.1.2
2023-12-31 19:40:28,903:INFO:               scipy: 1.10.1
2023-12-31 19:40:28,903:INFO:              joblib: 1.2.0
2023-12-31 19:40:28,903:INFO:             sklearn: 1.2.2
2023-12-31 19:40:28,903:INFO:                pyod: 1.1.2
2023-12-31 19:40:28,903:INFO:            imblearn: 0.11.0
2023-12-31 19:40:28,904:INFO:   category_encoders: 2.6.3
2023-12-31 19:40:28,904:INFO:            lightgbm: 4.2.0
2023-12-31 19:40:28,904:INFO:               numba: 0.58.1
2023-12-31 19:40:28,904:INFO:            requests: 2.31.0
2023-12-31 19:40:28,904:INFO:          matplotlib: 3.8.2
2023-12-31 19:40:28,904:INFO:          scikitplot: 0.3.7
2023-12-31 19:40:28,904:INFO:         yellowbrick: 1.5
2023-12-31 19:40:28,904:INFO:              plotly: 5.18.0
2023-12-31 19:40:28,904:INFO:    plotly-resampler: Not installed
2023-12-31 19:40:28,904:INFO:             kaleido: 0.2.1
2023-12-31 19:40:28,904:INFO:           schemdraw: 0.15
2023-12-31 19:40:28,904:INFO:         statsmodels: 0.14.1
2023-12-31 19:40:28,904:INFO:              sktime: 0.21.1
2023-12-31 19:40:28,904:INFO:               tbats: 1.1.3
2023-12-31 19:40:28,904:INFO:            pmdarima: 2.0.4
2023-12-31 19:40:28,904:INFO:              psutil: 5.9.0
2023-12-31 19:40:28,904:INFO:          markupsafe: 2.1.1
2023-12-31 19:40:28,904:INFO:             pickle5: Not installed
2023-12-31 19:40:28,904:INFO:         cloudpickle: 2.2.1
2023-12-31 19:40:28,904:INFO:         deprecation: 2.1.0
2023-12-31 19:40:28,904:INFO:              xxhash: 3.4.1
2023-12-31 19:40:28,904:INFO:           wurlitzer: Not installed
2023-12-31 19:40:28,905:INFO:PyCaret optional dependencies:
2023-12-31 19:40:28,905:INFO:                shap: Not installed
2023-12-31 19:40:28,905:INFO:           interpret: Not installed
2023-12-31 19:40:28,905:INFO:                umap: Not installed
2023-12-31 19:40:28,905:INFO:     ydata_profiling: Not installed
2023-12-31 19:40:28,905:INFO:  explainerdashboard: Not installed
2023-12-31 19:40:28,905:INFO:             autoviz: Not installed
2023-12-31 19:40:28,905:INFO:           fairlearn: Not installed
2023-12-31 19:40:28,905:INFO:          deepchecks: Not installed
2023-12-31 19:40:28,905:INFO:             xgboost: 2.0.3
2023-12-31 19:40:28,905:INFO:            catboost: Not installed
2023-12-31 19:40:28,905:INFO:              kmodes: Not installed
2023-12-31 19:40:28,905:INFO:             mlxtend: 0.23.0
2023-12-31 19:40:28,905:INFO:       statsforecast: Not installed
2023-12-31 19:40:28,905:INFO:        tune_sklearn: Not installed
2023-12-31 19:40:28,905:INFO:                 ray: Not installed
2023-12-31 19:40:28,905:INFO:            hyperopt: Not installed
2023-12-31 19:40:28,905:INFO:              optuna: Not installed
2023-12-31 19:40:28,905:INFO:               skopt: Not installed
2023-12-31 19:40:28,906:INFO:              mlflow: Not installed
2023-12-31 19:40:28,906:INFO:              gradio: Not installed
2023-12-31 19:40:28,906:INFO:             fastapi: Not installed
2023-12-31 19:40:28,906:INFO:             uvicorn: Not installed
2023-12-31 19:40:28,906:INFO:              m2cgen: Not installed
2023-12-31 19:40:28,906:INFO:           evidently: Not installed
2023-12-31 19:40:28,906:INFO:               fugue: Not installed
2023-12-31 19:40:28,906:INFO:           streamlit: Not installed
2023-12-31 19:40:28,906:INFO:             prophet: Not installed
2023-12-31 19:40:28,906:INFO:None
2023-12-31 19:40:28,906:INFO:Set up data.
2023-12-31 19:42:13,028:INFO:PyCaret RegressionExperiment
2023-12-31 19:42:13,028:INFO:Logging name: reg-default-name
2023-12-31 19:42:13,028:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:42:13,028:INFO:version 3.2.0
2023-12-31 19:42:13,028:INFO:Initializing setup()
2023-12-31 19:42:13,029:INFO:self.USI: 8c7e
2023-12-31 19:42:13,029:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'html_param', 'seed', 'USI', 'y_train', 'logging_param', 'target_param', 'data', 'memory', 'X_test', 'fold_generator', 'X_train', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_param', 'exp_id', 'n_jobs_param', 'y', '_available_plots', 'X', 'transform_target_param', 'gpu_n_jobs_param', 'y_test'}
2023-12-31 19:42:13,029:INFO:Checking environment
2023-12-31 19:42:13,029:INFO:python_version: 3.10.13
2023-12-31 19:42:13,029:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:42:13,029:INFO:machine: AMD64
2023-12-31 19:42:13,029:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:42:13,034:INFO:Memory: svmem(total=8373600256, available=1441198080, percent=82.8, used=6932402176, free=1441198080)
2023-12-31 19:42:13,034:INFO:Physical Core: 4
2023-12-31 19:42:13,034:INFO:Logical Core: 8
2023-12-31 19:42:13,034:INFO:Checking libraries
2023-12-31 19:42:13,034:INFO:System:
2023-12-31 19:42:13,034:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:42:13,034:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:42:13,035:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:42:13,035:INFO:PyCaret required dependencies:
2023-12-31 19:42:13,035:INFO:                 pip: 23.3.1
2023-12-31 19:42:13,035:INFO:          setuptools: 68.2.2
2023-12-31 19:42:13,035:INFO:             pycaret: 3.2.0
2023-12-31 19:42:13,035:INFO:             IPython: 8.15.0
2023-12-31 19:42:13,035:INFO:          ipywidgets: 8.1.1
2023-12-31 19:42:13,035:INFO:                tqdm: 4.65.0
2023-12-31 19:42:13,035:INFO:               numpy: 1.25.2
2023-12-31 19:42:13,035:INFO:              pandas: 1.5.3
2023-12-31 19:42:13,035:INFO:              jinja2: 3.1.2
2023-12-31 19:42:13,035:INFO:               scipy: 1.10.1
2023-12-31 19:42:13,035:INFO:              joblib: 1.2.0
2023-12-31 19:42:13,036:INFO:             sklearn: 1.2.2
2023-12-31 19:42:13,036:INFO:                pyod: 1.1.2
2023-12-31 19:42:13,036:INFO:            imblearn: 0.11.0
2023-12-31 19:42:13,036:INFO:   category_encoders: 2.6.3
2023-12-31 19:42:13,036:INFO:            lightgbm: 4.2.0
2023-12-31 19:42:13,036:INFO:               numba: 0.58.1
2023-12-31 19:42:13,036:INFO:            requests: 2.31.0
2023-12-31 19:42:13,036:INFO:          matplotlib: 3.8.2
2023-12-31 19:42:13,036:INFO:          scikitplot: 0.3.7
2023-12-31 19:42:13,036:INFO:         yellowbrick: 1.5
2023-12-31 19:42:13,036:INFO:              plotly: 5.18.0
2023-12-31 19:42:13,036:INFO:    plotly-resampler: Not installed
2023-12-31 19:42:13,037:INFO:             kaleido: 0.2.1
2023-12-31 19:42:13,037:INFO:           schemdraw: 0.15
2023-12-31 19:42:13,037:INFO:         statsmodels: 0.14.1
2023-12-31 19:42:13,037:INFO:              sktime: 0.21.1
2023-12-31 19:42:13,037:INFO:               tbats: 1.1.3
2023-12-31 19:42:13,037:INFO:            pmdarima: 2.0.4
2023-12-31 19:42:13,037:INFO:              psutil: 5.9.0
2023-12-31 19:42:13,037:INFO:          markupsafe: 2.1.1
2023-12-31 19:42:13,037:INFO:             pickle5: Not installed
2023-12-31 19:42:13,037:INFO:         cloudpickle: 2.2.1
2023-12-31 19:42:13,037:INFO:         deprecation: 2.1.0
2023-12-31 19:42:13,037:INFO:              xxhash: 3.4.1
2023-12-31 19:42:13,037:INFO:           wurlitzer: Not installed
2023-12-31 19:42:13,038:INFO:PyCaret optional dependencies:
2023-12-31 19:42:13,038:INFO:                shap: Not installed
2023-12-31 19:42:13,038:INFO:           interpret: Not installed
2023-12-31 19:42:13,038:INFO:                umap: Not installed
2023-12-31 19:42:13,038:INFO:     ydata_profiling: Not installed
2023-12-31 19:42:13,038:INFO:  explainerdashboard: Not installed
2023-12-31 19:42:13,038:INFO:             autoviz: Not installed
2023-12-31 19:42:13,038:INFO:           fairlearn: Not installed
2023-12-31 19:42:13,038:INFO:          deepchecks: Not installed
2023-12-31 19:42:13,038:INFO:             xgboost: 2.0.3
2023-12-31 19:42:13,038:INFO:            catboost: Not installed
2023-12-31 19:42:13,038:INFO:              kmodes: Not installed
2023-12-31 19:42:13,039:INFO:             mlxtend: 0.23.0
2023-12-31 19:42:13,039:INFO:       statsforecast: Not installed
2023-12-31 19:42:13,039:INFO:        tune_sklearn: Not installed
2023-12-31 19:42:13,039:INFO:                 ray: Not installed
2023-12-31 19:42:13,039:INFO:            hyperopt: Not installed
2023-12-31 19:42:13,039:INFO:              optuna: Not installed
2023-12-31 19:42:13,039:INFO:               skopt: Not installed
2023-12-31 19:42:13,039:INFO:              mlflow: Not installed
2023-12-31 19:42:13,039:INFO:              gradio: Not installed
2023-12-31 19:42:13,039:INFO:             fastapi: Not installed
2023-12-31 19:42:13,039:INFO:             uvicorn: Not installed
2023-12-31 19:42:13,039:INFO:              m2cgen: Not installed
2023-12-31 19:42:13,040:INFO:           evidently: Not installed
2023-12-31 19:42:13,040:INFO:               fugue: Not installed
2023-12-31 19:42:13,040:INFO:           streamlit: Not installed
2023-12-31 19:42:13,040:INFO:             prophet: Not installed
2023-12-31 19:42:13,040:INFO:None
2023-12-31 19:42:13,040:INFO:Set up data.
2023-12-31 19:43:48,860:INFO:PyCaret RegressionExperiment
2023-12-31 19:43:48,860:INFO:Logging name: reg-default-name
2023-12-31 19:43:48,861:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:43:48,861:INFO:version 3.2.0
2023-12-31 19:43:48,861:INFO:Initializing setup()
2023-12-31 19:43:48,861:INFO:self.USI: 2064
2023-12-31 19:43:48,861:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'html_param', 'seed', 'USI', 'y_train', 'logging_param', 'target_param', 'data', 'memory', 'X_test', 'fold_generator', 'X_train', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_param', 'exp_id', 'n_jobs_param', 'y', '_available_plots', 'X', 'transform_target_param', 'gpu_n_jobs_param', 'y_test'}
2023-12-31 19:43:48,861:INFO:Checking environment
2023-12-31 19:43:48,861:INFO:python_version: 3.10.13
2023-12-31 19:43:48,861:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:43:48,862:INFO:machine: AMD64
2023-12-31 19:43:48,862:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:43:48,868:INFO:Memory: svmem(total=8373600256, available=1551155200, percent=81.5, used=6822445056, free=1551155200)
2023-12-31 19:43:48,868:INFO:Physical Core: 4
2023-12-31 19:43:48,868:INFO:Logical Core: 8
2023-12-31 19:43:48,868:INFO:Checking libraries
2023-12-31 19:43:48,868:INFO:System:
2023-12-31 19:43:48,868:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:43:48,868:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:43:48,869:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:43:48,869:INFO:PyCaret required dependencies:
2023-12-31 19:43:48,869:INFO:                 pip: 23.3.1
2023-12-31 19:43:48,869:INFO:          setuptools: 68.2.2
2023-12-31 19:43:48,869:INFO:             pycaret: 3.2.0
2023-12-31 19:43:48,869:INFO:             IPython: 8.15.0
2023-12-31 19:43:48,869:INFO:          ipywidgets: 8.1.1
2023-12-31 19:43:48,869:INFO:                tqdm: 4.65.0
2023-12-31 19:43:48,869:INFO:               numpy: 1.25.2
2023-12-31 19:43:48,869:INFO:              pandas: 1.5.3
2023-12-31 19:43:48,869:INFO:              jinja2: 3.1.2
2023-12-31 19:43:48,869:INFO:               scipy: 1.10.1
2023-12-31 19:43:48,870:INFO:              joblib: 1.2.0
2023-12-31 19:43:48,870:INFO:             sklearn: 1.2.2
2023-12-31 19:43:48,870:INFO:                pyod: 1.1.2
2023-12-31 19:43:48,870:INFO:            imblearn: 0.11.0
2023-12-31 19:43:48,870:INFO:   category_encoders: 2.6.3
2023-12-31 19:43:48,870:INFO:            lightgbm: 4.2.0
2023-12-31 19:43:48,870:INFO:               numba: 0.58.1
2023-12-31 19:43:48,870:INFO:            requests: 2.31.0
2023-12-31 19:43:48,870:INFO:          matplotlib: 3.8.2
2023-12-31 19:43:48,870:INFO:          scikitplot: 0.3.7
2023-12-31 19:43:48,870:INFO:         yellowbrick: 1.5
2023-12-31 19:43:48,870:INFO:              plotly: 5.18.0
2023-12-31 19:43:48,870:INFO:    plotly-resampler: Not installed
2023-12-31 19:43:48,870:INFO:             kaleido: 0.2.1
2023-12-31 19:43:48,871:INFO:           schemdraw: 0.15
2023-12-31 19:43:48,871:INFO:         statsmodels: 0.14.1
2023-12-31 19:43:48,871:INFO:              sktime: 0.21.1
2023-12-31 19:43:48,871:INFO:               tbats: 1.1.3
2023-12-31 19:43:48,871:INFO:            pmdarima: 2.0.4
2023-12-31 19:43:48,871:INFO:              psutil: 5.9.0
2023-12-31 19:43:48,871:INFO:          markupsafe: 2.1.1
2023-12-31 19:43:48,871:INFO:             pickle5: Not installed
2023-12-31 19:43:48,871:INFO:         cloudpickle: 2.2.1
2023-12-31 19:43:48,872:INFO:         deprecation: 2.1.0
2023-12-31 19:43:48,872:INFO:              xxhash: 3.4.1
2023-12-31 19:43:48,872:INFO:           wurlitzer: Not installed
2023-12-31 19:43:48,872:INFO:PyCaret optional dependencies:
2023-12-31 19:43:48,872:INFO:                shap: Not installed
2023-12-31 19:43:48,872:INFO:           interpret: Not installed
2023-12-31 19:43:48,872:INFO:                umap: Not installed
2023-12-31 19:43:48,873:INFO:     ydata_profiling: Not installed
2023-12-31 19:43:48,873:INFO:  explainerdashboard: Not installed
2023-12-31 19:43:48,873:INFO:             autoviz: Not installed
2023-12-31 19:43:48,873:INFO:           fairlearn: Not installed
2023-12-31 19:43:48,873:INFO:          deepchecks: Not installed
2023-12-31 19:43:48,873:INFO:             xgboost: 2.0.3
2023-12-31 19:43:48,873:INFO:            catboost: Not installed
2023-12-31 19:43:48,873:INFO:              kmodes: Not installed
2023-12-31 19:43:48,873:INFO:             mlxtend: 0.23.0
2023-12-31 19:43:48,873:INFO:       statsforecast: Not installed
2023-12-31 19:43:48,873:INFO:        tune_sklearn: Not installed
2023-12-31 19:43:48,874:INFO:                 ray: Not installed
2023-12-31 19:43:48,874:INFO:            hyperopt: Not installed
2023-12-31 19:43:48,874:INFO:              optuna: Not installed
2023-12-31 19:43:48,874:INFO:               skopt: Not installed
2023-12-31 19:43:48,874:INFO:              mlflow: Not installed
2023-12-31 19:43:48,874:INFO:              gradio: Not installed
2023-12-31 19:43:48,874:INFO:             fastapi: Not installed
2023-12-31 19:43:48,874:INFO:             uvicorn: Not installed
2023-12-31 19:43:48,874:INFO:              m2cgen: Not installed
2023-12-31 19:43:48,874:INFO:           evidently: Not installed
2023-12-31 19:43:48,874:INFO:               fugue: Not installed
2023-12-31 19:43:48,874:INFO:           streamlit: Not installed
2023-12-31 19:43:48,875:INFO:             prophet: Not installed
2023-12-31 19:43:48,875:INFO:None
2023-12-31 19:43:48,875:INFO:Set up data.
2023-12-31 19:44:46,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:44:46,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:44:46,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:44:46,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 19:44:46,445:INFO:PyCaret RegressionExperiment
2023-12-31 19:44:46,445:INFO:Logging name: reg-default-name
2023-12-31 19:44:46,445:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:44:46,445:INFO:version 3.2.0
2023-12-31 19:44:46,445:INFO:Initializing setup()
2023-12-31 19:44:46,445:INFO:self.USI: 520b
2023-12-31 19:44:46,445:INFO:self._variable_keys: {'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'transform_target_param', 'fold_groups_param', 'pipeline', 'logging_param', 'memory', '_ml_usecase', 'y', 'y_test', 'X_train', 'data', 'X', 'gpu_param', 'exp_id', 'target_param', 'USI', 'idx', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'log_plots_param', 'fold_generator', 'y_train'}
2023-12-31 19:44:46,445:INFO:Checking environment
2023-12-31 19:44:46,445:INFO:python_version: 3.10.13
2023-12-31 19:44:46,445:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:44:46,445:INFO:machine: AMD64
2023-12-31 19:44:46,445:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:44:46,449:INFO:Memory: svmem(total=8373600256, available=1690390528, percent=79.8, used=6683209728, free=1690390528)
2023-12-31 19:44:46,449:INFO:Physical Core: 4
2023-12-31 19:44:46,449:INFO:Logical Core: 8
2023-12-31 19:44:46,449:INFO:Checking libraries
2023-12-31 19:44:46,449:INFO:System:
2023-12-31 19:44:46,450:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:44:46,450:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:44:46,450:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:44:46,450:INFO:PyCaret required dependencies:
2023-12-31 19:44:46,474:INFO:                 pip: 23.3.1
2023-12-31 19:44:46,474:INFO:          setuptools: 68.2.2
2023-12-31 19:44:46,475:INFO:             pycaret: 3.2.0
2023-12-31 19:44:46,475:INFO:             IPython: 8.15.0
2023-12-31 19:44:46,475:INFO:          ipywidgets: 8.1.1
2023-12-31 19:44:46,475:INFO:                tqdm: 4.65.0
2023-12-31 19:44:46,475:INFO:               numpy: 1.25.2
2023-12-31 19:44:46,475:INFO:              pandas: 1.5.3
2023-12-31 19:44:46,475:INFO:              jinja2: 3.1.2
2023-12-31 19:44:46,475:INFO:               scipy: 1.10.1
2023-12-31 19:44:46,475:INFO:              joblib: 1.2.0
2023-12-31 19:44:46,475:INFO:             sklearn: 1.2.2
2023-12-31 19:44:46,475:INFO:                pyod: 1.1.2
2023-12-31 19:44:46,475:INFO:            imblearn: 0.11.0
2023-12-31 19:44:46,475:INFO:   category_encoders: 2.6.3
2023-12-31 19:44:46,475:INFO:            lightgbm: 4.2.0
2023-12-31 19:44:46,475:INFO:               numba: 0.58.1
2023-12-31 19:44:46,475:INFO:            requests: 2.31.0
2023-12-31 19:44:46,475:INFO:          matplotlib: 3.8.2
2023-12-31 19:44:46,475:INFO:          scikitplot: 0.3.7
2023-12-31 19:44:46,475:INFO:         yellowbrick: 1.5
2023-12-31 19:44:46,475:INFO:              plotly: 5.18.0
2023-12-31 19:44:46,475:INFO:    plotly-resampler: Not installed
2023-12-31 19:44:46,475:INFO:             kaleido: 0.2.1
2023-12-31 19:44:46,475:INFO:           schemdraw: 0.15
2023-12-31 19:44:46,475:INFO:         statsmodels: 0.14.1
2023-12-31 19:44:46,475:INFO:              sktime: 0.21.1
2023-12-31 19:44:46,475:INFO:               tbats: 1.1.3
2023-12-31 19:44:46,475:INFO:            pmdarima: 2.0.4
2023-12-31 19:44:46,475:INFO:              psutil: 5.9.0
2023-12-31 19:44:46,475:INFO:          markupsafe: 2.1.1
2023-12-31 19:44:46,475:INFO:             pickle5: Not installed
2023-12-31 19:44:46,475:INFO:         cloudpickle: 2.2.1
2023-12-31 19:44:46,476:INFO:         deprecation: 2.1.0
2023-12-31 19:44:46,476:INFO:              xxhash: 3.4.1
2023-12-31 19:44:46,476:INFO:           wurlitzer: Not installed
2023-12-31 19:44:46,476:INFO:PyCaret optional dependencies:
2023-12-31 19:44:46,520:INFO:                shap: Not installed
2023-12-31 19:44:46,520:INFO:           interpret: Not installed
2023-12-31 19:44:46,520:INFO:                umap: Not installed
2023-12-31 19:44:46,520:INFO:     ydata_profiling: Not installed
2023-12-31 19:44:46,520:INFO:  explainerdashboard: Not installed
2023-12-31 19:44:46,520:INFO:             autoviz: Not installed
2023-12-31 19:44:46,520:INFO:           fairlearn: Not installed
2023-12-31 19:44:46,520:INFO:          deepchecks: Not installed
2023-12-31 19:44:46,520:INFO:             xgboost: 2.0.3
2023-12-31 19:44:46,520:INFO:            catboost: Not installed
2023-12-31 19:44:46,520:INFO:              kmodes: Not installed
2023-12-31 19:44:46,520:INFO:             mlxtend: 0.23.0
2023-12-31 19:44:46,520:INFO:       statsforecast: Not installed
2023-12-31 19:44:46,520:INFO:        tune_sklearn: Not installed
2023-12-31 19:44:46,520:INFO:                 ray: Not installed
2023-12-31 19:44:46,520:INFO:            hyperopt: Not installed
2023-12-31 19:44:46,520:INFO:              optuna: Not installed
2023-12-31 19:44:46,520:INFO:               skopt: Not installed
2023-12-31 19:44:46,521:INFO:              mlflow: Not installed
2023-12-31 19:44:46,521:INFO:              gradio: Not installed
2023-12-31 19:44:46,521:INFO:             fastapi: Not installed
2023-12-31 19:44:46,521:INFO:             uvicorn: Not installed
2023-12-31 19:44:46,521:INFO:              m2cgen: Not installed
2023-12-31 19:44:46,521:INFO:           evidently: Not installed
2023-12-31 19:44:46,521:INFO:               fugue: Not installed
2023-12-31 19:44:46,521:INFO:           streamlit: Not installed
2023-12-31 19:44:46,521:INFO:             prophet: Not installed
2023-12-31 19:44:46,521:INFO:None
2023-12-31 19:44:46,521:INFO:Set up data.
2023-12-31 19:45:23,757:INFO:PyCaret RegressionExperiment
2023-12-31 19:45:23,757:INFO:Logging name: reg-default-name
2023-12-31 19:45:23,757:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:45:23,757:INFO:version 3.2.0
2023-12-31 19:45:23,757:INFO:Initializing setup()
2023-12-31 19:45:23,757:INFO:self.USI: 1a58
2023-12-31 19:45:23,757:INFO:self._variable_keys: {'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'transform_target_param', 'fold_groups_param', 'pipeline', 'logging_param', 'memory', '_ml_usecase', 'y', 'y_test', 'X_train', 'data', 'X', 'gpu_param', 'exp_id', 'target_param', 'USI', 'idx', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'log_plots_param', 'fold_generator', 'y_train'}
2023-12-31 19:45:23,757:INFO:Checking environment
2023-12-31 19:45:23,758:INFO:python_version: 3.10.13
2023-12-31 19:45:23,758:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:45:23,758:INFO:machine: AMD64
2023-12-31 19:45:23,758:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:45:23,761:INFO:Memory: svmem(total=8373600256, available=1478893568, percent=82.3, used=6894706688, free=1478893568)
2023-12-31 19:45:23,761:INFO:Physical Core: 4
2023-12-31 19:45:23,761:INFO:Logical Core: 8
2023-12-31 19:45:23,761:INFO:Checking libraries
2023-12-31 19:45:23,761:INFO:System:
2023-12-31 19:45:23,762:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:45:23,762:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:45:23,762:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:45:23,762:INFO:PyCaret required dependencies:
2023-12-31 19:45:23,762:INFO:                 pip: 23.3.1
2023-12-31 19:45:23,762:INFO:          setuptools: 68.2.2
2023-12-31 19:45:23,762:INFO:             pycaret: 3.2.0
2023-12-31 19:45:23,762:INFO:             IPython: 8.15.0
2023-12-31 19:45:23,762:INFO:          ipywidgets: 8.1.1
2023-12-31 19:45:23,762:INFO:                tqdm: 4.65.0
2023-12-31 19:45:23,762:INFO:               numpy: 1.25.2
2023-12-31 19:45:23,762:INFO:              pandas: 1.5.3
2023-12-31 19:45:23,762:INFO:              jinja2: 3.1.2
2023-12-31 19:45:23,762:INFO:               scipy: 1.10.1
2023-12-31 19:45:23,762:INFO:              joblib: 1.2.0
2023-12-31 19:45:23,762:INFO:             sklearn: 1.2.2
2023-12-31 19:45:23,762:INFO:                pyod: 1.1.2
2023-12-31 19:45:23,762:INFO:            imblearn: 0.11.0
2023-12-31 19:45:23,762:INFO:   category_encoders: 2.6.3
2023-12-31 19:45:23,763:INFO:            lightgbm: 4.2.0
2023-12-31 19:45:23,763:INFO:               numba: 0.58.1
2023-12-31 19:45:23,763:INFO:            requests: 2.31.0
2023-12-31 19:45:23,763:INFO:          matplotlib: 3.8.2
2023-12-31 19:45:23,763:INFO:          scikitplot: 0.3.7
2023-12-31 19:45:23,763:INFO:         yellowbrick: 1.5
2023-12-31 19:45:23,763:INFO:              plotly: 5.18.0
2023-12-31 19:45:23,763:INFO:    plotly-resampler: Not installed
2023-12-31 19:45:23,763:INFO:             kaleido: 0.2.1
2023-12-31 19:45:23,763:INFO:           schemdraw: 0.15
2023-12-31 19:45:23,763:INFO:         statsmodels: 0.14.1
2023-12-31 19:45:23,763:INFO:              sktime: 0.21.1
2023-12-31 19:45:23,763:INFO:               tbats: 1.1.3
2023-12-31 19:45:23,763:INFO:            pmdarima: 2.0.4
2023-12-31 19:45:23,763:INFO:              psutil: 5.9.0
2023-12-31 19:45:23,763:INFO:          markupsafe: 2.1.1
2023-12-31 19:45:23,763:INFO:             pickle5: Not installed
2023-12-31 19:45:23,763:INFO:         cloudpickle: 2.2.1
2023-12-31 19:45:23,763:INFO:         deprecation: 2.1.0
2023-12-31 19:45:23,763:INFO:              xxhash: 3.4.1
2023-12-31 19:45:23,763:INFO:           wurlitzer: Not installed
2023-12-31 19:45:23,763:INFO:PyCaret optional dependencies:
2023-12-31 19:45:23,764:INFO:                shap: Not installed
2023-12-31 19:45:23,764:INFO:           interpret: Not installed
2023-12-31 19:45:23,764:INFO:                umap: Not installed
2023-12-31 19:45:23,764:INFO:     ydata_profiling: Not installed
2023-12-31 19:45:23,764:INFO:  explainerdashboard: Not installed
2023-12-31 19:45:23,764:INFO:             autoviz: Not installed
2023-12-31 19:45:23,764:INFO:           fairlearn: Not installed
2023-12-31 19:45:23,764:INFO:          deepchecks: Not installed
2023-12-31 19:45:23,764:INFO:             xgboost: 2.0.3
2023-12-31 19:45:23,764:INFO:            catboost: Not installed
2023-12-31 19:45:23,764:INFO:              kmodes: Not installed
2023-12-31 19:45:23,764:INFO:             mlxtend: 0.23.0
2023-12-31 19:45:23,764:INFO:       statsforecast: Not installed
2023-12-31 19:45:23,764:INFO:        tune_sklearn: Not installed
2023-12-31 19:45:23,764:INFO:                 ray: Not installed
2023-12-31 19:45:23,764:INFO:            hyperopt: Not installed
2023-12-31 19:45:23,764:INFO:              optuna: Not installed
2023-12-31 19:45:23,764:INFO:               skopt: Not installed
2023-12-31 19:45:23,764:INFO:              mlflow: Not installed
2023-12-31 19:45:23,764:INFO:              gradio: Not installed
2023-12-31 19:45:23,765:INFO:             fastapi: Not installed
2023-12-31 19:45:23,765:INFO:             uvicorn: Not installed
2023-12-31 19:45:23,765:INFO:              m2cgen: Not installed
2023-12-31 19:45:23,765:INFO:           evidently: Not installed
2023-12-31 19:45:23,765:INFO:               fugue: Not installed
2023-12-31 19:45:23,765:INFO:           streamlit: Not installed
2023-12-31 19:45:23,765:INFO:             prophet: Not installed
2023-12-31 19:45:23,765:INFO:None
2023-12-31 19:45:23,765:INFO:Set up data.
2023-12-31 19:47:08,454:INFO:PyCaret RegressionExperiment
2023-12-31 19:47:08,454:INFO:Logging name: reg-default-name
2023-12-31 19:47:08,454:INFO:ML Usecase: MLUsecase.REGRESSION
2023-12-31 19:47:08,454:INFO:version 3.2.0
2023-12-31 19:47:08,454:INFO:Initializing setup()
2023-12-31 19:47:08,455:INFO:self.USI: dba2
2023-12-31 19:47:08,455:INFO:self._variable_keys: {'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'transform_target_param', 'fold_groups_param', 'pipeline', 'logging_param', 'memory', '_ml_usecase', 'y', 'y_test', 'X_train', 'data', 'X', 'gpu_param', 'exp_id', 'target_param', 'USI', 'idx', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'log_plots_param', 'fold_generator', 'y_train'}
2023-12-31 19:47:08,455:INFO:Checking environment
2023-12-31 19:47:08,455:INFO:python_version: 3.10.13
2023-12-31 19:47:08,455:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:47:08,455:INFO:machine: AMD64
2023-12-31 19:47:08,455:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:47:08,458:INFO:Memory: svmem(total=8373600256, available=1597837312, percent=80.9, used=6775762944, free=1597837312)
2023-12-31 19:47:08,458:INFO:Physical Core: 4
2023-12-31 19:47:08,458:INFO:Logical Core: 8
2023-12-31 19:47:08,458:INFO:Checking libraries
2023-12-31 19:47:08,458:INFO:System:
2023-12-31 19:47:08,458:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:47:08,458:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:47:08,458:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:47:08,458:INFO:PyCaret required dependencies:
2023-12-31 19:47:08,458:INFO:                 pip: 23.3.1
2023-12-31 19:47:08,458:INFO:          setuptools: 68.2.2
2023-12-31 19:47:08,458:INFO:             pycaret: 3.2.0
2023-12-31 19:47:08,459:INFO:             IPython: 8.15.0
2023-12-31 19:47:08,459:INFO:          ipywidgets: 8.1.1
2023-12-31 19:47:08,459:INFO:                tqdm: 4.65.0
2023-12-31 19:47:08,459:INFO:               numpy: 1.25.2
2023-12-31 19:47:08,459:INFO:              pandas: 1.5.3
2023-12-31 19:47:08,459:INFO:              jinja2: 3.1.2
2023-12-31 19:47:08,459:INFO:               scipy: 1.10.1
2023-12-31 19:47:08,459:INFO:              joblib: 1.2.0
2023-12-31 19:47:08,459:INFO:             sklearn: 1.2.2
2023-12-31 19:47:08,459:INFO:                pyod: 1.1.2
2023-12-31 19:47:08,459:INFO:            imblearn: 0.11.0
2023-12-31 19:47:08,459:INFO:   category_encoders: 2.6.3
2023-12-31 19:47:08,459:INFO:            lightgbm: 4.2.0
2023-12-31 19:47:08,459:INFO:               numba: 0.58.1
2023-12-31 19:47:08,459:INFO:            requests: 2.31.0
2023-12-31 19:47:08,459:INFO:          matplotlib: 3.8.2
2023-12-31 19:47:08,459:INFO:          scikitplot: 0.3.7
2023-12-31 19:47:08,459:INFO:         yellowbrick: 1.5
2023-12-31 19:47:08,459:INFO:              plotly: 5.18.0
2023-12-31 19:47:08,459:INFO:    plotly-resampler: Not installed
2023-12-31 19:47:08,459:INFO:             kaleido: 0.2.1
2023-12-31 19:47:08,459:INFO:           schemdraw: 0.15
2023-12-31 19:47:08,459:INFO:         statsmodels: 0.14.1
2023-12-31 19:47:08,459:INFO:              sktime: 0.21.1
2023-12-31 19:47:08,459:INFO:               tbats: 1.1.3
2023-12-31 19:47:08,459:INFO:            pmdarima: 2.0.4
2023-12-31 19:47:08,459:INFO:              psutil: 5.9.0
2023-12-31 19:47:08,459:INFO:          markupsafe: 2.1.1
2023-12-31 19:47:08,459:INFO:             pickle5: Not installed
2023-12-31 19:47:08,459:INFO:         cloudpickle: 2.2.1
2023-12-31 19:47:08,459:INFO:         deprecation: 2.1.0
2023-12-31 19:47:08,459:INFO:              xxhash: 3.4.1
2023-12-31 19:47:08,459:INFO:           wurlitzer: Not installed
2023-12-31 19:47:08,460:INFO:PyCaret optional dependencies:
2023-12-31 19:47:08,460:INFO:                shap: Not installed
2023-12-31 19:47:08,460:INFO:           interpret: Not installed
2023-12-31 19:47:08,460:INFO:                umap: Not installed
2023-12-31 19:47:08,460:INFO:     ydata_profiling: Not installed
2023-12-31 19:47:08,460:INFO:  explainerdashboard: Not installed
2023-12-31 19:47:08,460:INFO:             autoviz: Not installed
2023-12-31 19:47:08,460:INFO:           fairlearn: Not installed
2023-12-31 19:47:08,460:INFO:          deepchecks: Not installed
2023-12-31 19:47:08,460:INFO:             xgboost: 2.0.3
2023-12-31 19:47:08,460:INFO:            catboost: Not installed
2023-12-31 19:47:08,460:INFO:              kmodes: Not installed
2023-12-31 19:47:08,460:INFO:             mlxtend: 0.23.0
2023-12-31 19:47:08,460:INFO:       statsforecast: Not installed
2023-12-31 19:47:08,460:INFO:        tune_sklearn: Not installed
2023-12-31 19:47:08,460:INFO:                 ray: Not installed
2023-12-31 19:47:08,460:INFO:            hyperopt: Not installed
2023-12-31 19:47:08,460:INFO:              optuna: Not installed
2023-12-31 19:47:08,460:INFO:               skopt: Not installed
2023-12-31 19:47:08,460:INFO:              mlflow: Not installed
2023-12-31 19:47:08,460:INFO:              gradio: Not installed
2023-12-31 19:47:08,461:INFO:             fastapi: Not installed
2023-12-31 19:47:08,461:INFO:             uvicorn: Not installed
2023-12-31 19:47:08,461:INFO:              m2cgen: Not installed
2023-12-31 19:47:08,461:INFO:           evidently: Not installed
2023-12-31 19:47:08,461:INFO:               fugue: Not installed
2023-12-31 19:47:08,461:INFO:           streamlit: Not installed
2023-12-31 19:47:08,461:INFO:             prophet: Not installed
2023-12-31 19:47:08,461:INFO:None
2023-12-31 19:47:08,461:INFO:Set up data.
2023-12-31 19:58:29,052:INFO:PyCaret ClassificationExperiment
2023-12-31 19:58:29,052:INFO:Logging name: clf-default-name
2023-12-31 19:58:29,052:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-31 19:58:29,052:INFO:version 3.2.0
2023-12-31 19:58:29,052:INFO:Initializing setup()
2023-12-31 19:58:29,052:INFO:self.USI: 4907
2023-12-31 19:58:29,052:INFO:self._variable_keys: {'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'is_multiclass', 'fold_groups_param', 'pipeline', 'logging_param', 'memory', '_ml_usecase', 'y', 'y_test', 'fix_imbalance', 'X_train', 'data', 'X', 'gpu_param', 'exp_id', 'target_param', 'USI', 'idx', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'log_plots_param', 'fold_generator', 'y_train'}
2023-12-31 19:58:29,052:INFO:Checking environment
2023-12-31 19:58:29,053:INFO:python_version: 3.10.13
2023-12-31 19:58:29,053:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:58:29,053:INFO:machine: AMD64
2023-12-31 19:58:29,053:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:58:29,057:INFO:Memory: svmem(total=8373600256, available=1491910656, percent=82.2, used=6881689600, free=1491910656)
2023-12-31 19:58:29,057:INFO:Physical Core: 4
2023-12-31 19:58:29,057:INFO:Logical Core: 8
2023-12-31 19:58:29,058:INFO:Checking libraries
2023-12-31 19:58:29,058:INFO:System:
2023-12-31 19:58:29,058:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:58:29,058:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:58:29,058:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:58:29,058:INFO:PyCaret required dependencies:
2023-12-31 19:58:29,058:INFO:                 pip: 23.3.1
2023-12-31 19:58:29,058:INFO:          setuptools: 68.2.2
2023-12-31 19:58:29,058:INFO:             pycaret: 3.2.0
2023-12-31 19:58:29,058:INFO:             IPython: 8.15.0
2023-12-31 19:58:29,058:INFO:          ipywidgets: 8.1.1
2023-12-31 19:58:29,058:INFO:                tqdm: 4.65.0
2023-12-31 19:58:29,058:INFO:               numpy: 1.25.2
2023-12-31 19:58:29,058:INFO:              pandas: 1.5.3
2023-12-31 19:58:29,058:INFO:              jinja2: 3.1.2
2023-12-31 19:58:29,058:INFO:               scipy: 1.10.1
2023-12-31 19:58:29,058:INFO:              joblib: 1.2.0
2023-12-31 19:58:29,059:INFO:             sklearn: 1.2.2
2023-12-31 19:58:29,059:INFO:                pyod: 1.1.2
2023-12-31 19:58:29,059:INFO:            imblearn: 0.11.0
2023-12-31 19:58:29,059:INFO:   category_encoders: 2.6.3
2023-12-31 19:58:29,059:INFO:            lightgbm: 4.2.0
2023-12-31 19:58:29,059:INFO:               numba: 0.58.1
2023-12-31 19:58:29,059:INFO:            requests: 2.31.0
2023-12-31 19:58:29,059:INFO:          matplotlib: 3.8.2
2023-12-31 19:58:29,059:INFO:          scikitplot: 0.3.7
2023-12-31 19:58:29,059:INFO:         yellowbrick: 1.5
2023-12-31 19:58:29,059:INFO:              plotly: 5.18.0
2023-12-31 19:58:29,059:INFO:    plotly-resampler: Not installed
2023-12-31 19:58:29,059:INFO:             kaleido: 0.2.1
2023-12-31 19:58:29,059:INFO:           schemdraw: 0.15
2023-12-31 19:58:29,059:INFO:         statsmodels: 0.14.1
2023-12-31 19:58:29,059:INFO:              sktime: 0.21.1
2023-12-31 19:58:29,059:INFO:               tbats: 1.1.3
2023-12-31 19:58:29,059:INFO:            pmdarima: 2.0.4
2023-12-31 19:58:29,059:INFO:              psutil: 5.9.0
2023-12-31 19:58:29,059:INFO:          markupsafe: 2.1.1
2023-12-31 19:58:29,059:INFO:             pickle5: Not installed
2023-12-31 19:58:29,059:INFO:         cloudpickle: 2.2.1
2023-12-31 19:58:29,060:INFO:         deprecation: 2.1.0
2023-12-31 19:58:29,060:INFO:              xxhash: 3.4.1
2023-12-31 19:58:29,060:INFO:           wurlitzer: Not installed
2023-12-31 19:58:29,060:INFO:PyCaret optional dependencies:
2023-12-31 19:58:29,060:INFO:                shap: Not installed
2023-12-31 19:58:29,060:INFO:           interpret: Not installed
2023-12-31 19:58:29,060:INFO:                umap: Not installed
2023-12-31 19:58:29,060:INFO:     ydata_profiling: Not installed
2023-12-31 19:58:29,060:INFO:  explainerdashboard: Not installed
2023-12-31 19:58:29,060:INFO:             autoviz: Not installed
2023-12-31 19:58:29,060:INFO:           fairlearn: Not installed
2023-12-31 19:58:29,060:INFO:          deepchecks: Not installed
2023-12-31 19:58:29,060:INFO:             xgboost: 2.0.3
2023-12-31 19:58:29,060:INFO:            catboost: Not installed
2023-12-31 19:58:29,060:INFO:              kmodes: Not installed
2023-12-31 19:58:29,060:INFO:             mlxtend: 0.23.0
2023-12-31 19:58:29,060:INFO:       statsforecast: Not installed
2023-12-31 19:58:29,060:INFO:        tune_sklearn: Not installed
2023-12-31 19:58:29,060:INFO:                 ray: Not installed
2023-12-31 19:58:29,060:INFO:            hyperopt: Not installed
2023-12-31 19:58:29,061:INFO:              optuna: Not installed
2023-12-31 19:58:29,061:INFO:               skopt: Not installed
2023-12-31 19:58:29,061:INFO:              mlflow: Not installed
2023-12-31 19:58:29,061:INFO:              gradio: Not installed
2023-12-31 19:58:29,061:INFO:             fastapi: Not installed
2023-12-31 19:58:29,061:INFO:             uvicorn: Not installed
2023-12-31 19:58:29,061:INFO:              m2cgen: Not installed
2023-12-31 19:58:29,061:INFO:           evidently: Not installed
2023-12-31 19:58:29,061:INFO:               fugue: Not installed
2023-12-31 19:58:29,061:INFO:           streamlit: Not installed
2023-12-31 19:58:29,061:INFO:             prophet: Not installed
2023-12-31 19:58:29,061:INFO:None
2023-12-31 19:58:29,061:INFO:Set up data.
2023-12-31 19:59:45,560:INFO:PyCaret ClassificationExperiment
2023-12-31 19:59:45,560:INFO:Logging name: clf-default-name
2023-12-31 19:59:45,561:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-31 19:59:45,561:INFO:version 3.2.0
2023-12-31 19:59:45,561:INFO:Initializing setup()
2023-12-31 19:59:45,561:INFO:self.USI: 807d
2023-12-31 19:59:45,561:INFO:self._variable_keys: {'gpu_n_jobs_param', 'html_param', 'n_jobs_param', 'fold_shuffle_param', 'is_multiclass', 'fold_groups_param', 'pipeline', 'logging_param', 'memory', '_ml_usecase', 'y', 'y_test', 'fix_imbalance', 'X_train', 'data', 'X', 'gpu_param', 'exp_id', 'target_param', 'USI', 'idx', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'log_plots_param', 'fold_generator', 'y_train'}
2023-12-31 19:59:45,561:INFO:Checking environment
2023-12-31 19:59:45,561:INFO:python_version: 3.10.13
2023-12-31 19:59:45,561:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 19:59:45,561:INFO:machine: AMD64
2023-12-31 19:59:45,561:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 19:59:45,571:INFO:Memory: svmem(total=8373600256, available=1184915456, percent=85.8, used=7188684800, free=1184915456)
2023-12-31 19:59:45,571:INFO:Physical Core: 4
2023-12-31 19:59:45,572:INFO:Logical Core: 8
2023-12-31 19:59:45,572:INFO:Checking libraries
2023-12-31 19:59:45,572:INFO:System:
2023-12-31 19:59:45,572:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 19:59:45,572:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 19:59:45,572:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 19:59:45,572:INFO:PyCaret required dependencies:
2023-12-31 19:59:45,573:INFO:                 pip: 23.3.1
2023-12-31 19:59:45,573:INFO:          setuptools: 68.2.2
2023-12-31 19:59:45,573:INFO:             pycaret: 3.2.0
2023-12-31 19:59:45,573:INFO:             IPython: 8.15.0
2023-12-31 19:59:45,573:INFO:          ipywidgets: 8.1.1
2023-12-31 19:59:45,573:INFO:                tqdm: 4.65.0
2023-12-31 19:59:45,573:INFO:               numpy: 1.25.2
2023-12-31 19:59:45,573:INFO:              pandas: 1.5.3
2023-12-31 19:59:45,573:INFO:              jinja2: 3.1.2
2023-12-31 19:59:45,573:INFO:               scipy: 1.10.1
2023-12-31 19:59:45,573:INFO:              joblib: 1.2.0
2023-12-31 19:59:45,573:INFO:             sklearn: 1.2.2
2023-12-31 19:59:45,573:INFO:                pyod: 1.1.2
2023-12-31 19:59:45,574:INFO:            imblearn: 0.11.0
2023-12-31 19:59:45,574:INFO:   category_encoders: 2.6.3
2023-12-31 19:59:45,574:INFO:            lightgbm: 4.2.0
2023-12-31 19:59:45,574:INFO:               numba: 0.58.1
2023-12-31 19:59:45,574:INFO:            requests: 2.31.0
2023-12-31 19:59:45,574:INFO:          matplotlib: 3.8.2
2023-12-31 19:59:45,574:INFO:          scikitplot: 0.3.7
2023-12-31 19:59:45,574:INFO:         yellowbrick: 1.5
2023-12-31 19:59:45,574:INFO:              plotly: 5.18.0
2023-12-31 19:59:45,574:INFO:    plotly-resampler: Not installed
2023-12-31 19:59:45,574:INFO:             kaleido: 0.2.1
2023-12-31 19:59:45,574:INFO:           schemdraw: 0.15
2023-12-31 19:59:45,574:INFO:         statsmodels: 0.14.1
2023-12-31 19:59:45,575:INFO:              sktime: 0.21.1
2023-12-31 19:59:45,575:INFO:               tbats: 1.1.3
2023-12-31 19:59:45,575:INFO:            pmdarima: 2.0.4
2023-12-31 19:59:45,575:INFO:              psutil: 5.9.0
2023-12-31 19:59:45,575:INFO:          markupsafe: 2.1.1
2023-12-31 19:59:45,575:INFO:             pickle5: Not installed
2023-12-31 19:59:45,575:INFO:         cloudpickle: 2.2.1
2023-12-31 19:59:45,575:INFO:         deprecation: 2.1.0
2023-12-31 19:59:45,575:INFO:              xxhash: 3.4.1
2023-12-31 19:59:45,575:INFO:           wurlitzer: Not installed
2023-12-31 19:59:45,575:INFO:PyCaret optional dependencies:
2023-12-31 19:59:45,575:INFO:                shap: Not installed
2023-12-31 19:59:45,576:INFO:           interpret: Not installed
2023-12-31 19:59:45,576:INFO:                umap: Not installed
2023-12-31 19:59:45,576:INFO:     ydata_profiling: Not installed
2023-12-31 19:59:45,576:INFO:  explainerdashboard: Not installed
2023-12-31 19:59:45,576:INFO:             autoviz: Not installed
2023-12-31 19:59:45,576:INFO:           fairlearn: Not installed
2023-12-31 19:59:45,576:INFO:          deepchecks: Not installed
2023-12-31 19:59:45,576:INFO:             xgboost: 2.0.3
2023-12-31 19:59:45,576:INFO:            catboost: Not installed
2023-12-31 19:59:45,576:INFO:              kmodes: Not installed
2023-12-31 19:59:45,576:INFO:             mlxtend: 0.23.0
2023-12-31 19:59:45,577:INFO:       statsforecast: Not installed
2023-12-31 19:59:45,577:INFO:        tune_sklearn: Not installed
2023-12-31 19:59:45,577:INFO:                 ray: Not installed
2023-12-31 19:59:45,577:INFO:            hyperopt: Not installed
2023-12-31 19:59:45,577:INFO:              optuna: Not installed
2023-12-31 19:59:45,577:INFO:               skopt: Not installed
2023-12-31 19:59:45,577:INFO:              mlflow: Not installed
2023-12-31 19:59:45,577:INFO:              gradio: Not installed
2023-12-31 19:59:45,577:INFO:             fastapi: Not installed
2023-12-31 19:59:45,577:INFO:             uvicorn: Not installed
2023-12-31 19:59:45,577:INFO:              m2cgen: Not installed
2023-12-31 19:59:45,577:INFO:           evidently: Not installed
2023-12-31 19:59:45,578:INFO:               fugue: Not installed
2023-12-31 19:59:45,578:INFO:           streamlit: Not installed
2023-12-31 19:59:45,578:INFO:             prophet: Not installed
2023-12-31 19:59:45,578:INFO:None
2023-12-31 19:59:45,578:INFO:Set up data.
2023-12-31 20:00:54,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 20:00:54,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 20:00:54,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 20:00:54,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 20:00:55,145:INFO:PyCaret ClassificationExperiment
2023-12-31 20:00:55,145:INFO:Logging name: clf-default-name
2023-12-31 20:00:55,145:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-31 20:00:55,145:INFO:version 3.2.0
2023-12-31 20:00:55,145:INFO:Initializing setup()
2023-12-31 20:00:55,145:INFO:self.USI: 8d51
2023-12-31 20:00:55,145:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'X_test', 'fold_shuffle_param', '_available_plots', 'html_param', 'n_jobs_param', 'X_train', 'USI', 'data', 'y_test', 'fold_groups_param', 'X', 'fix_imbalance', 'log_plots_param', 'gpu_n_jobs_param', 'seed', 'memory', '_ml_usecase', 'pipeline', 'fold_generator', 'idx', 'gpu_param', 'y_train', 'logging_param', 'is_multiclass', 'target_param', 'y'}
2023-12-31 20:00:55,146:INFO:Checking environment
2023-12-31 20:00:55,146:INFO:python_version: 3.10.13
2023-12-31 20:00:55,146:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2023-12-31 20:00:55,146:INFO:machine: AMD64
2023-12-31 20:00:55,146:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-31 20:00:55,155:INFO:Memory: svmem(total=8373600256, available=1173381120, percent=86.0, used=7200219136, free=1173381120)
2023-12-31 20:00:55,156:INFO:Physical Core: 4
2023-12-31 20:00:55,156:INFO:Logical Core: 8
2023-12-31 20:00:55,156:INFO:Checking libraries
2023-12-31 20:00:55,157:INFO:System:
2023-12-31 20:00:55,157:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2023-12-31 20:00:55,157:INFO:executable: c:\Users\El-Wattaneya\anaconda3\python.exe
2023-12-31 20:00:55,157:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-31 20:00:55,157:INFO:PyCaret required dependencies:
2023-12-31 20:00:55,196:INFO:                 pip: 23.3.1
2023-12-31 20:00:55,197:INFO:          setuptools: 68.2.2
2023-12-31 20:00:55,197:INFO:             pycaret: 3.2.0
2023-12-31 20:00:55,197:INFO:             IPython: 8.15.0
2023-12-31 20:00:55,197:INFO:          ipywidgets: 8.1.1
2023-12-31 20:00:55,197:INFO:                tqdm: 4.65.0
2023-12-31 20:00:55,197:INFO:               numpy: 1.25.2
2023-12-31 20:00:55,197:INFO:              pandas: 1.5.3
2023-12-31 20:00:55,197:INFO:              jinja2: 3.1.2
2023-12-31 20:00:55,197:INFO:               scipy: 1.10.1
2023-12-31 20:00:55,197:INFO:              joblib: 1.2.0
2023-12-31 20:00:55,197:INFO:             sklearn: 1.2.2
2023-12-31 20:00:55,197:INFO:                pyod: 1.1.2
2023-12-31 20:00:55,197:INFO:            imblearn: 0.11.0
2023-12-31 20:00:55,197:INFO:   category_encoders: 2.6.3
2023-12-31 20:00:55,197:INFO:            lightgbm: 4.2.0
2023-12-31 20:00:55,198:INFO:               numba: 0.58.1
2023-12-31 20:00:55,198:INFO:            requests: 2.31.0
2023-12-31 20:00:55,198:INFO:          matplotlib: 3.8.2
2023-12-31 20:00:55,198:INFO:          scikitplot: 0.3.7
2023-12-31 20:00:55,198:INFO:         yellowbrick: 1.5
2023-12-31 20:00:55,198:INFO:              plotly: 5.18.0
2023-12-31 20:00:55,198:INFO:    plotly-resampler: Not installed
2023-12-31 20:00:55,198:INFO:             kaleido: 0.2.1
2023-12-31 20:00:55,198:INFO:           schemdraw: 0.15
2023-12-31 20:00:55,198:INFO:         statsmodels: 0.14.1
2023-12-31 20:00:55,198:INFO:              sktime: 0.21.1
2023-12-31 20:00:55,198:INFO:               tbats: 1.1.3
2023-12-31 20:00:55,198:INFO:            pmdarima: 2.0.4
2023-12-31 20:00:55,198:INFO:              psutil: 5.9.0
2023-12-31 20:00:55,198:INFO:          markupsafe: 2.1.1
2023-12-31 20:00:55,198:INFO:             pickle5: Not installed
2023-12-31 20:00:55,198:INFO:         cloudpickle: 2.2.1
2023-12-31 20:00:55,198:INFO:         deprecation: 2.1.0
2023-12-31 20:00:55,198:INFO:              xxhash: 3.4.1
2023-12-31 20:00:55,198:INFO:           wurlitzer: Not installed
2023-12-31 20:00:55,198:INFO:PyCaret optional dependencies:
2023-12-31 20:00:55,293:INFO:                shap: Not installed
2023-12-31 20:00:55,293:INFO:           interpret: Not installed
2023-12-31 20:00:55,293:INFO:                umap: Not installed
2023-12-31 20:00:55,293:INFO:     ydata_profiling: Not installed
2023-12-31 20:00:55,293:INFO:  explainerdashboard: Not installed
2023-12-31 20:00:55,293:INFO:             autoviz: Not installed
2023-12-31 20:00:55,293:INFO:           fairlearn: Not installed
2023-12-31 20:00:55,293:INFO:          deepchecks: Not installed
2023-12-31 20:00:55,293:INFO:             xgboost: 2.0.3
2023-12-31 20:00:55,293:INFO:            catboost: Not installed
2023-12-31 20:00:55,293:INFO:              kmodes: Not installed
2023-12-31 20:00:55,293:INFO:             mlxtend: 0.23.0
2023-12-31 20:00:55,294:INFO:       statsforecast: Not installed
2023-12-31 20:00:55,294:INFO:        tune_sklearn: Not installed
2023-12-31 20:00:55,294:INFO:                 ray: Not installed
2023-12-31 20:00:55,294:INFO:            hyperopt: Not installed
2023-12-31 20:00:55,294:INFO:              optuna: Not installed
2023-12-31 20:00:55,294:INFO:               skopt: Not installed
2023-12-31 20:00:55,294:INFO:              mlflow: Not installed
2023-12-31 20:00:55,294:INFO:              gradio: Not installed
2023-12-31 20:00:55,294:INFO:             fastapi: Not installed
2023-12-31 20:00:55,294:INFO:             uvicorn: Not installed
2023-12-31 20:00:55,294:INFO:              m2cgen: Not installed
2023-12-31 20:00:55,294:INFO:           evidently: Not installed
2023-12-31 20:00:55,294:INFO:               fugue: Not installed
2023-12-31 20:00:55,294:INFO:           streamlit: Not installed
2023-12-31 20:00:55,294:INFO:             prophet: Not installed
2023-12-31 20:00:55,294:INFO:None
2023-12-31 20:00:55,295:INFO:Set up data.
2023-12-31 20:00:55,321:INFO:Set up folding strategy.
2023-12-31 20:00:55,322:INFO:Set up train/test split.
2023-12-31 20:00:55,346:INFO:Set up index.
2023-12-31 20:00:55,348:INFO:Assigning column types.
2023-12-31 20:00:55,364:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-31 20:00:55,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,464:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,540:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,543:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-31 20:00:55,588:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,619:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 20:00:55,727:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,733:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-31 20:00:55,847:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,961:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:55,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:55,983:INFO:Preparing preprocessing pipeline...
2023-12-31 20:00:55,987:INFO:Set up label encoding.
2023-12-31 20:00:55,987:INFO:Set up simple imputation.
2023-12-31 20:00:56,095:INFO:Finished creating preprocessing pipeline.
2023-12-31 20:00:56,102:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Public\Documents\Wondershare\CreatorTemp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mod...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-12-31 20:00:56,102:INFO:Creating final display dataframe.
2023-12-31 20:00:56,280:INFO:Setup _display_container:                     Description                   Value
0                    Session id                      42
1                        Target          playlist_genre
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape             (24664, 15)
5        Transformed data shape             (24664, 15)
6   Transformed train set shape             (17264, 15)
7    Transformed test set shape              (7400, 15)
8              Numeric features                      14
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    8d51
2023-12-31 20:00:56,369:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:56,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:56,449:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 20:00:56,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 20:00:56,452:INFO:setup() successfully completed in 1.31s...............
2023-12-31 20:00:56,452:INFO:Initializing compare_models()
2023-12-31 20:00:56,452:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-31 20:00:56,453:INFO:Checking exceptions
2023-12-31 20:00:56,460:INFO:Preparing display monitor
2023-12-31 20:00:56,490:INFO:Initializing Logistic Regression
2023-12-31 20:00:56,490:INFO:Total runtime is 0.0 minutes
2023-12-31 20:00:56,496:INFO:SubProcess create_model() called ==================================
2023-12-31 20:00:56,497:INFO:Initializing create_model()
2023-12-31 20:00:56,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:00:56,497:INFO:Checking exceptions
2023-12-31 20:00:56,497:INFO:Importing libraries
2023-12-31 20:00:56,497:INFO:Copying training dataset
2023-12-31 20:00:56,509:INFO:Defining folds
2023-12-31 20:00:56,509:INFO:Declaring metric variables
2023-12-31 20:00:56,514:INFO:Importing untrained model
2023-12-31 20:00:56,519:INFO:Logistic Regression Imported successfully
2023-12-31 20:00:56,531:INFO:Starting cross validation
2023-12-31 20:00:56,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:07,054:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:07,059:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:07,064:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:07,677:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:07,682:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:07,712:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,960:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,964:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,969:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,976:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,981:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:10,986:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,441:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 20:01:11,521:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,528:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,537:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,743:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,751:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:11,771:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,321:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 20:01:12,356:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,364:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,370:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 20:01:12,371:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,406:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,412:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:12,417:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,373:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,379:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,386:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,629:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 20:01:13,656:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,661:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,663:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:13,671:INFO:Calculating mean and std
2023-12-31 20:01:13,673:INFO:Creating metrics dataframe
2023-12-31 20:01:13,680:INFO:Uploading results into container
2023-12-31 20:01:13,681:INFO:Uploading model into container now
2023-12-31 20:01:13,681:INFO:_master_model_container: 1
2023-12-31 20:01:13,681:INFO:_display_container: 2
2023-12-31 20:01:13,682:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-31 20:01:13,683:INFO:create_model() successfully completed......................................
2023-12-31 20:01:13,871:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:13,871:INFO:Creating metrics dataframe
2023-12-31 20:01:13,886:INFO:Initializing K Neighbors Classifier
2023-12-31 20:01:13,886:INFO:Total runtime is 0.28994077841440835 minutes
2023-12-31 20:01:13,893:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:13,893:INFO:Initializing create_model()
2023-12-31 20:01:13,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:13,894:INFO:Checking exceptions
2023-12-31 20:01:13,894:INFO:Importing libraries
2023-12-31 20:01:13,894:INFO:Copying training dataset
2023-12-31 20:01:13,906:INFO:Defining folds
2023-12-31 20:01:13,906:INFO:Declaring metric variables
2023-12-31 20:01:13,914:INFO:Importing untrained model
2023-12-31 20:01:13,922:INFO:K Neighbors Classifier Imported successfully
2023-12-31 20:01:13,932:INFO:Starting cross validation
2023-12-31 20:01:13,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:14,446:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,451:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,454:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,476:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,480:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,480:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,485:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,485:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,489:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,529:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,533:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,537:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,553:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,559:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,564:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,606:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,610:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,614:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,615:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,620:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,628:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,638:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,642:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,646:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,767:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,771:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,775:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,815:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,819:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,823:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:14,829:INFO:Calculating mean and std
2023-12-31 20:01:14,831:INFO:Creating metrics dataframe
2023-12-31 20:01:14,836:INFO:Uploading results into container
2023-12-31 20:01:14,836:INFO:Uploading model into container now
2023-12-31 20:01:14,837:INFO:_master_model_container: 2
2023-12-31 20:01:14,837:INFO:_display_container: 2
2023-12-31 20:01:14,837:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-31 20:01:14,837:INFO:create_model() successfully completed......................................
2023-12-31 20:01:14,959:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:14,959:INFO:Creating metrics dataframe
2023-12-31 20:01:14,976:INFO:Initializing Naive Bayes
2023-12-31 20:01:14,976:INFO:Total runtime is 0.3081050435702006 minutes
2023-12-31 20:01:14,980:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:14,981:INFO:Initializing create_model()
2023-12-31 20:01:14,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:14,981:INFO:Checking exceptions
2023-12-31 20:01:14,981:INFO:Importing libraries
2023-12-31 20:01:14,982:INFO:Copying training dataset
2023-12-31 20:01:14,999:INFO:Defining folds
2023-12-31 20:01:14,999:INFO:Declaring metric variables
2023-12-31 20:01:15,007:INFO:Importing untrained model
2023-12-31 20:01:15,016:INFO:Naive Bayes Imported successfully
2023-12-31 20:01:15,033:INFO:Starting cross validation
2023-12-31 20:01:15,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:15,255:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,262:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,271:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,308:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,320:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,333:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,481:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,483:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,487:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,489:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,495:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,498:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,511:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,517:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,518:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,522:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,525:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,528:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,529:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,531:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,534:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,535:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,539:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,546:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,556:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,564:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,568:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,570:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,571:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,576:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:15,587:INFO:Calculating mean and std
2023-12-31 20:01:15,588:INFO:Creating metrics dataframe
2023-12-31 20:01:15,595:INFO:Uploading results into container
2023-12-31 20:01:15,596:INFO:Uploading model into container now
2023-12-31 20:01:15,596:INFO:_master_model_container: 3
2023-12-31 20:01:15,596:INFO:_display_container: 2
2023-12-31 20:01:15,597:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-31 20:01:15,597:INFO:create_model() successfully completed......................................
2023-12-31 20:01:15,798:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:15,799:INFO:Creating metrics dataframe
2023-12-31 20:01:15,820:INFO:Initializing Decision Tree Classifier
2023-12-31 20:01:15,820:INFO:Total runtime is 0.3221723556518554 minutes
2023-12-31 20:01:15,827:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:15,828:INFO:Initializing create_model()
2023-12-31 20:01:15,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:15,830:INFO:Checking exceptions
2023-12-31 20:01:15,830:INFO:Importing libraries
2023-12-31 20:01:15,830:INFO:Copying training dataset
2023-12-31 20:01:15,851:INFO:Defining folds
2023-12-31 20:01:15,852:INFO:Declaring metric variables
2023-12-31 20:01:15,857:INFO:Importing untrained model
2023-12-31 20:01:15,863:INFO:Decision Tree Classifier Imported successfully
2023-12-31 20:01:15,878:INFO:Starting cross validation
2023-12-31 20:01:15,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:16,260:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,268:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,270:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,273:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,278:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,282:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,302:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,308:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,315:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,331:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,331:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,338:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,338:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,343:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,344:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,357:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,364:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,371:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,412:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,418:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,429:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,429:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,438:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,445:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,544:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,548:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,556:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,576:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,578:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,581:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:16,591:INFO:Calculating mean and std
2023-12-31 20:01:16,593:INFO:Creating metrics dataframe
2023-12-31 20:01:16,602:INFO:Uploading results into container
2023-12-31 20:01:16,603:INFO:Uploading model into container now
2023-12-31 20:01:16,604:INFO:_master_model_container: 4
2023-12-31 20:01:16,605:INFO:_display_container: 2
2023-12-31 20:01:16,610:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-12-31 20:01:16,610:INFO:create_model() successfully completed......................................
2023-12-31 20:01:16,802:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:16,802:INFO:Creating metrics dataframe
2023-12-31 20:01:16,823:INFO:Initializing SVM - Linear Kernel
2023-12-31 20:01:16,823:INFO:Total runtime is 0.33889377117156977 minutes
2023-12-31 20:01:16,828:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:16,828:INFO:Initializing create_model()
2023-12-31 20:01:16,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:16,829:INFO:Checking exceptions
2023-12-31 20:01:16,829:INFO:Importing libraries
2023-12-31 20:01:16,829:INFO:Copying training dataset
2023-12-31 20:01:16,844:INFO:Defining folds
2023-12-31 20:01:16,844:INFO:Declaring metric variables
2023-12-31 20:01:16,849:INFO:Importing untrained model
2023-12-31 20:01:16,853:INFO:SVM - Linear Kernel Imported successfully
2023-12-31 20:01:16,862:INFO:Starting cross validation
2023-12-31 20:01:16,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:18,191:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:18,193:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,198:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,200:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:18,203:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,295:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:18,297:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,302:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,304:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:18,307:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,636:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:18,638:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,643:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,645:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:18,647:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,877:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:18,880:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,886:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:18,888:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:18,902:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,307:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:19,310:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,314:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,317:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:19,319:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,353:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:19,356:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,361:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,364:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:19,368:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,560:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:19,563:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,585:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,590:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:19,594:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,683:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:19,684:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,690:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:19,693:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:19,695:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,017:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:20,021:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,026:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,028:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,031:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,097:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-31 20:01:20,099:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,101:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,103:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,104:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,110:INFO:Calculating mean and std
2023-12-31 20:01:20,112:INFO:Creating metrics dataframe
2023-12-31 20:01:20,117:INFO:Uploading results into container
2023-12-31 20:01:20,118:INFO:Uploading model into container now
2023-12-31 20:01:20,119:INFO:_master_model_container: 5
2023-12-31 20:01:20,119:INFO:_display_container: 2
2023-12-31 20:01:20,120:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-31 20:01:20,121:INFO:create_model() successfully completed......................................
2023-12-31 20:01:20,243:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:20,244:INFO:Creating metrics dataframe
2023-12-31 20:01:20,259:INFO:Initializing Ridge Classifier
2023-12-31 20:01:20,259:INFO:Total runtime is 0.3961628278096516 minutes
2023-12-31 20:01:20,262:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:20,262:INFO:Initializing create_model()
2023-12-31 20:01:20,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:20,264:INFO:Checking exceptions
2023-12-31 20:01:20,264:INFO:Importing libraries
2023-12-31 20:01:20,264:INFO:Copying training dataset
2023-12-31 20:01:20,275:INFO:Defining folds
2023-12-31 20:01:20,275:INFO:Declaring metric variables
2023-12-31 20:01:20,280:INFO:Importing untrained model
2023-12-31 20:01:20,286:INFO:Ridge Classifier Imported successfully
2023-12-31 20:01:20,294:INFO:Starting cross validation
2023-12-31 20:01:20,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:20,591:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,594:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,594:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,600:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,600:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,602:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,604:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,609:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,609:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,610:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,611:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,612:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,621:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,624:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,627:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,635:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,643:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,651:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,652:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,655:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,666:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,669:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,672:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,676:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,677:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,681:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,684:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,697:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,704:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,705:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,708:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,709:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,719:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,728:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,807:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,810:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,815:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,821:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,835:WARNING:C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\El-Wattaneya\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-31 20:01:20,837:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,840:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,842:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:20,844:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:20,857:INFO:Calculating mean and std
2023-12-31 20:01:20,861:INFO:Creating metrics dataframe
2023-12-31 20:01:20,873:INFO:Uploading results into container
2023-12-31 20:01:20,875:INFO:Uploading model into container now
2023-12-31 20:01:20,876:INFO:_master_model_container: 6
2023-12-31 20:01:20,876:INFO:_display_container: 2
2023-12-31 20:01:20,877:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-12-31 20:01:20,878:INFO:create_model() successfully completed......................................
2023-12-31 20:01:21,082:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:21,082:INFO:Creating metrics dataframe
2023-12-31 20:01:21,100:INFO:Initializing Random Forest Classifier
2023-12-31 20:01:21,100:INFO:Total runtime is 0.4101776679356892 minutes
2023-12-31 20:01:21,104:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:21,104:INFO:Initializing create_model()
2023-12-31 20:01:21,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:21,104:INFO:Checking exceptions
2023-12-31 20:01:21,104:INFO:Importing libraries
2023-12-31 20:01:21,104:INFO:Copying training dataset
2023-12-31 20:01:21,126:INFO:Defining folds
2023-12-31 20:01:21,126:INFO:Declaring metric variables
2023-12-31 20:01:21,133:INFO:Importing untrained model
2023-12-31 20:01:21,142:INFO:Random Forest Classifier Imported successfully
2023-12-31 20:01:21,158:INFO:Starting cross validation
2023-12-31 20:01:21,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:26,164:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,169:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,174:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,174:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,178:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,200:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,205:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,210:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,227:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,232:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,234:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,238:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,239:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,243:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,275:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,285:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,296:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,325:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,330:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,335:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,371:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,374:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:26,377:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,639:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,642:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,645:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,656:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,659:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,662:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:27,668:INFO:Calculating mean and std
2023-12-31 20:01:27,670:INFO:Creating metrics dataframe
2023-12-31 20:01:27,675:INFO:Uploading results into container
2023-12-31 20:01:27,676:INFO:Uploading model into container now
2023-12-31 20:01:27,676:INFO:_master_model_container: 7
2023-12-31 20:01:27,676:INFO:_display_container: 2
2023-12-31 20:01:27,677:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-12-31 20:01:27,677:INFO:create_model() successfully completed......................................
2023-12-31 20:01:27,808:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:27,808:INFO:Creating metrics dataframe
2023-12-31 20:01:27,822:INFO:Initializing Quadratic Discriminant Analysis
2023-12-31 20:01:27,822:INFO:Total runtime is 0.5222145835558573 minutes
2023-12-31 20:01:27,828:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:27,829:INFO:Initializing create_model()
2023-12-31 20:01:27,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:27,829:INFO:Checking exceptions
2023-12-31 20:01:27,830:INFO:Importing libraries
2023-12-31 20:01:27,830:INFO:Copying training dataset
2023-12-31 20:01:27,844:INFO:Defining folds
2023-12-31 20:01:27,844:INFO:Declaring metric variables
2023-12-31 20:01:27,849:INFO:Importing untrained model
2023-12-31 20:01:27,855:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-31 20:01:27,867:INFO:Starting cross validation
2023-12-31 20:01:27,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:28,057:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,070:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,096:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,133:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,142:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,149:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,149:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,157:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,158:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,162:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,165:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,168:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,174:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,184:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,189:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,194:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,194:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,199:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,202:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,205:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,207:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,212:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,215:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,218:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,220:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,224:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,226:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,227:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:28,230:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,233:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,238:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,246:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,258:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,283:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 20:01:28,291:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,297:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,317:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,331:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,334:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,339:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:28,347:INFO:Calculating mean and std
2023-12-31 20:01:28,349:INFO:Creating metrics dataframe
2023-12-31 20:01:28,356:INFO:Uploading results into container
2023-12-31 20:01:28,357:INFO:Uploading model into container now
2023-12-31 20:01:28,357:INFO:_master_model_container: 8
2023-12-31 20:01:28,358:INFO:_display_container: 2
2023-12-31 20:01:28,358:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-31 20:01:28,359:INFO:create_model() successfully completed......................................
2023-12-31 20:01:28,461:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:28,461:INFO:Creating metrics dataframe
2023-12-31 20:01:28,475:INFO:Initializing Ada Boost Classifier
2023-12-31 20:01:28,475:INFO:Total runtime is 0.5330931504567463 minutes
2023-12-31 20:01:28,479:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:28,480:INFO:Initializing create_model()
2023-12-31 20:01:28,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:28,480:INFO:Checking exceptions
2023-12-31 20:01:28,480:INFO:Importing libraries
2023-12-31 20:01:28,480:INFO:Copying training dataset
2023-12-31 20:01:28,490:INFO:Defining folds
2023-12-31 20:01:28,491:INFO:Declaring metric variables
2023-12-31 20:01:28,495:INFO:Importing untrained model
2023-12-31 20:01:28,499:INFO:Ada Boost Classifier Imported successfully
2023-12-31 20:01:28,508:INFO:Starting cross validation
2023-12-31 20:01:28,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:30,300:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,306:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,309:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,309:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,311:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,315:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,316:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,318:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,320:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,320:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,322:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,325:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,530:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,534:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,537:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,540:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,564:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,567:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,570:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,572:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,596:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,598:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,601:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,602:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,603:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,603:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,604:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,606:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,637:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,641:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:30,642:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:30,644:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,398:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,400:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,401:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:31,403:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,417:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,421:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,423:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:01:31,424:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:31,430:INFO:Calculating mean and std
2023-12-31 20:01:31,431:INFO:Creating metrics dataframe
2023-12-31 20:01:31,437:INFO:Uploading results into container
2023-12-31 20:01:31,438:INFO:Uploading model into container now
2023-12-31 20:01:31,438:INFO:_master_model_container: 9
2023-12-31 20:01:31,439:INFO:_display_container: 2
2023-12-31 20:01:31,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-12-31 20:01:31,439:INFO:create_model() successfully completed......................................
2023-12-31 20:01:31,548:INFO:SubProcess create_model() end ==================================
2023-12-31 20:01:31,548:INFO:Creating metrics dataframe
2023-12-31 20:01:31,561:INFO:Initializing Gradient Boosting Classifier
2023-12-31 20:01:31,561:INFO:Total runtime is 0.5845250209172566 minutes
2023-12-31 20:01:31,565:INFO:SubProcess create_model() called ==================================
2023-12-31 20:01:31,565:INFO:Initializing create_model()
2023-12-31 20:01:31,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:01:31,565:INFO:Checking exceptions
2023-12-31 20:01:31,565:INFO:Importing libraries
2023-12-31 20:01:31,565:INFO:Copying training dataset
2023-12-31 20:01:31,574:INFO:Defining folds
2023-12-31 20:01:31,574:INFO:Declaring metric variables
2023-12-31 20:01:31,579:INFO:Importing untrained model
2023-12-31 20:01:31,584:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 20:01:31,591:INFO:Starting cross validation
2023-12-31 20:01:31,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:01:56,169:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:56,173:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:56,179:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,260:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,265:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,270:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,944:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,949:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:57,954:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:58,530:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:58,534:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:01:58,539:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,112:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,116:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,121:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,252:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,256:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,260:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,289:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,294:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,298:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,333:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,338:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:01,340:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,221:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,224:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,226:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,789:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,792:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,794:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:12,800:INFO:Calculating mean and std
2023-12-31 20:02:12,801:INFO:Creating metrics dataframe
2023-12-31 20:02:12,804:INFO:Uploading results into container
2023-12-31 20:02:12,805:INFO:Uploading model into container now
2023-12-31 20:02:12,805:INFO:_master_model_container: 10
2023-12-31 20:02:12,805:INFO:_display_container: 2
2023-12-31 20:02:12,806:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:02:12,806:INFO:create_model() successfully completed......................................
2023-12-31 20:02:12,911:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:12,911:INFO:Creating metrics dataframe
2023-12-31 20:02:12,930:INFO:Initializing Linear Discriminant Analysis
2023-12-31 20:02:12,931:INFO:Total runtime is 1.2740184624989825 minutes
2023-12-31 20:02:12,935:INFO:SubProcess create_model() called ==================================
2023-12-31 20:02:12,936:INFO:Initializing create_model()
2023-12-31 20:02:12,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:12,937:INFO:Checking exceptions
2023-12-31 20:02:12,937:INFO:Importing libraries
2023-12-31 20:02:12,937:INFO:Copying training dataset
2023-12-31 20:02:12,947:INFO:Defining folds
2023-12-31 20:02:12,947:INFO:Declaring metric variables
2023-12-31 20:02:12,954:INFO:Importing untrained model
2023-12-31 20:02:12,959:INFO:Linear Discriminant Analysis Imported successfully
2023-12-31 20:02:12,967:INFO:Starting cross validation
2023-12-31 20:02:12,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:02:13,237:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,242:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,244:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,247:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,252:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,256:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,259:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,260:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,261:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,267:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,268:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,272:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,272:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,272:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,277:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,277:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,279:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,282:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,283:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,284:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,291:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,292:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,294:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,301:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,379:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,383:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,385:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,387:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,389:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,392:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:13,398:INFO:Calculating mean and std
2023-12-31 20:02:13,399:INFO:Creating metrics dataframe
2023-12-31 20:02:13,403:INFO:Uploading results into container
2023-12-31 20:02:13,403:INFO:Uploading model into container now
2023-12-31 20:02:13,403:INFO:_master_model_container: 11
2023-12-31 20:02:13,404:INFO:_display_container: 2
2023-12-31 20:02:13,404:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-31 20:02:13,404:INFO:create_model() successfully completed......................................
2023-12-31 20:02:13,499:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:13,500:INFO:Creating metrics dataframe
2023-12-31 20:02:13,513:INFO:Initializing Extra Trees Classifier
2023-12-31 20:02:13,513:INFO:Total runtime is 1.283726096153259 minutes
2023-12-31 20:02:13,518:INFO:SubProcess create_model() called ==================================
2023-12-31 20:02:13,518:INFO:Initializing create_model()
2023-12-31 20:02:13,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:13,518:INFO:Checking exceptions
2023-12-31 20:02:13,519:INFO:Importing libraries
2023-12-31 20:02:13,519:INFO:Copying training dataset
2023-12-31 20:02:13,528:INFO:Defining folds
2023-12-31 20:02:13,528:INFO:Declaring metric variables
2023-12-31 20:02:13,532:INFO:Importing untrained model
2023-12-31 20:02:13,538:INFO:Extra Trees Classifier Imported successfully
2023-12-31 20:02:13,546:INFO:Starting cross validation
2023-12-31 20:02:13,548:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:02:15,527:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,533:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,537:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,546:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,552:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,561:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,565:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,570:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,595:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,602:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,607:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,611:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,632:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,637:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,641:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,752:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,757:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,762:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,768:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,772:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,777:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,947:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:15,955:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,032:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,418:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,420:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,423:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,453:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,456:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,459:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:16,464:INFO:Calculating mean and std
2023-12-31 20:02:16,465:INFO:Creating metrics dataframe
2023-12-31 20:02:16,468:INFO:Uploading results into container
2023-12-31 20:02:16,469:INFO:Uploading model into container now
2023-12-31 20:02:16,469:INFO:_master_model_container: 12
2023-12-31 20:02:16,469:INFO:_display_container: 2
2023-12-31 20:02:16,470:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-12-31 20:02:16,470:INFO:create_model() successfully completed......................................
2023-12-31 20:02:16,562:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:16,562:INFO:Creating metrics dataframe
2023-12-31 20:02:16,575:INFO:Initializing Extreme Gradient Boosting
2023-12-31 20:02:16,575:INFO:Total runtime is 1.3347660104433694 minutes
2023-12-31 20:02:16,580:INFO:SubProcess create_model() called ==================================
2023-12-31 20:02:16,580:INFO:Initializing create_model()
2023-12-31 20:02:16,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:16,581:INFO:Checking exceptions
2023-12-31 20:02:16,581:INFO:Importing libraries
2023-12-31 20:02:16,581:INFO:Copying training dataset
2023-12-31 20:02:16,595:INFO:Defining folds
2023-12-31 20:02:16,595:INFO:Declaring metric variables
2023-12-31 20:02:16,601:INFO:Importing untrained model
2023-12-31 20:02:16,608:INFO:Extreme Gradient Boosting Imported successfully
2023-12-31 20:02:16,618:INFO:Starting cross validation
2023-12-31 20:02:16,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:02:18,783:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,788:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,792:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,797:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,801:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,806:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,814:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,815:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,819:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,820:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,824:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,825:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,826:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,831:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,837:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,863:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,869:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,874:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,895:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,900:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,903:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,916:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,920:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:18,924:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,720:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,722:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,724:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,727:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,730:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,732:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:19,737:INFO:Calculating mean and std
2023-12-31 20:02:19,738:INFO:Creating metrics dataframe
2023-12-31 20:02:19,742:INFO:Uploading results into container
2023-12-31 20:02:19,742:INFO:Uploading model into container now
2023-12-31 20:02:19,743:INFO:_master_model_container: 13
2023-12-31 20:02:19,743:INFO:_display_container: 2
2023-12-31 20:02:19,744:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-12-31 20:02:19,744:INFO:create_model() successfully completed......................................
2023-12-31 20:02:19,831:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:19,832:INFO:Creating metrics dataframe
2023-12-31 20:02:19,846:INFO:Initializing Light Gradient Boosting Machine
2023-12-31 20:02:19,846:INFO:Total runtime is 1.389273722966512 minutes
2023-12-31 20:02:19,850:INFO:SubProcess create_model() called ==================================
2023-12-31 20:02:19,850:INFO:Initializing create_model()
2023-12-31 20:02:19,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:19,850:INFO:Checking exceptions
2023-12-31 20:02:19,850:INFO:Importing libraries
2023-12-31 20:02:19,850:INFO:Copying training dataset
2023-12-31 20:02:19,859:INFO:Defining folds
2023-12-31 20:02:19,860:INFO:Declaring metric variables
2023-12-31 20:02:19,864:INFO:Importing untrained model
2023-12-31 20:02:19,868:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-31 20:02:19,876:INFO:Starting cross validation
2023-12-31 20:02:19,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:02:23,990:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:23,996:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,001:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,021:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,025:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,030:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,077:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,081:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,085:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,132:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,136:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,140:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,265:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,269:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,274:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,278:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,285:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,288:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,364:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,368:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,372:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,402:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,405:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:24,409:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,447:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,450:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,454:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,637:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,640:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,644:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:25,653:INFO:Calculating mean and std
2023-12-31 20:02:25,655:INFO:Creating metrics dataframe
2023-12-31 20:02:25,661:INFO:Uploading results into container
2023-12-31 20:02:25,662:INFO:Uploading model into container now
2023-12-31 20:02:25,662:INFO:_master_model_container: 14
2023-12-31 20:02:25,663:INFO:_display_container: 2
2023-12-31 20:02:25,664:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-31 20:02:25,664:INFO:create_model() successfully completed......................................
2023-12-31 20:02:25,791:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:25,791:INFO:Creating metrics dataframe
2023-12-31 20:02:25,805:INFO:Initializing Dummy Classifier
2023-12-31 20:02:25,805:INFO:Total runtime is 1.4885950128237406 minutes
2023-12-31 20:02:25,808:INFO:SubProcess create_model() called ==================================
2023-12-31 20:02:25,809:INFO:Initializing create_model()
2023-12-31 20:02:25,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F96FBAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:25,809:INFO:Checking exceptions
2023-12-31 20:02:25,809:INFO:Importing libraries
2023-12-31 20:02:25,809:INFO:Copying training dataset
2023-12-31 20:02:25,828:INFO:Defining folds
2023-12-31 20:02:25,828:INFO:Declaring metric variables
2023-12-31 20:02:25,831:INFO:Importing untrained model
2023-12-31 20:02:25,836:INFO:Dummy Classifier Imported successfully
2023-12-31 20:02:25,843:INFO:Starting cross validation
2023-12-31 20:02:25,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:02:26,000:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,006:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,009:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,013:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,026:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,033:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,037:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,038:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,040:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,040:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,043:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,043:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,047:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,049:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,053:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,054:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,055:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,056:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,058:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,059:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,059:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,060:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,062:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,062:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,070:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,072:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,078:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,081:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,082:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,085:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,088:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,125:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,127:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,129:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,130:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,137:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,139:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,140:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 20:02:26,141:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:02:26,148:INFO:Calculating mean and std
2023-12-31 20:02:26,149:INFO:Creating metrics dataframe
2023-12-31 20:02:26,153:INFO:Uploading results into container
2023-12-31 20:02:26,153:INFO:Uploading model into container now
2023-12-31 20:02:26,154:INFO:_master_model_container: 15
2023-12-31 20:02:26,154:INFO:_display_container: 2
2023-12-31 20:02:26,154:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-12-31 20:02:26,155:INFO:create_model() successfully completed......................................
2023-12-31 20:02:26,239:INFO:SubProcess create_model() end ==================================
2023-12-31 20:02:26,239:INFO:Creating metrics dataframe
2023-12-31 20:02:26,265:INFO:Initializing create_model()
2023-12-31 20:02:26,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:02:26,265:INFO:Checking exceptions
2023-12-31 20:02:26,267:INFO:Importing libraries
2023-12-31 20:02:26,267:INFO:Copying training dataset
2023-12-31 20:02:26,278:INFO:Defining folds
2023-12-31 20:02:26,278:INFO:Declaring metric variables
2023-12-31 20:02:26,279:INFO:Importing untrained model
2023-12-31 20:02:26,279:INFO:Declaring custom model
2023-12-31 20:02:26,280:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 20:02:26,281:INFO:Cross validation set to False
2023-12-31 20:02:26,281:INFO:Fitting Model
2023-12-31 20:02:40,288:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:02:40,288:INFO:create_model() successfully completed......................................
2023-12-31 20:02:40,416:INFO:_master_model_container: 15
2023-12-31 20:02:40,416:INFO:_display_container: 2
2023-12-31 20:02:40,416:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:02:40,416:INFO:compare_models() successfully completed......................................
2023-12-31 20:02:40,417:INFO:Initializing tune_model()
2023-12-31 20:02:40,418:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>)
2023-12-31 20:02:40,418:INFO:Checking exceptions
2023-12-31 20:02:40,440:INFO:Copying training dataset
2023-12-31 20:02:40,456:INFO:Checking base model
2023-12-31 20:02:40,457:INFO:Base model : Gradient Boosting Classifier
2023-12-31 20:02:40,462:INFO:Declaring metric variables
2023-12-31 20:02:40,466:INFO:Defining Hyperparameters
2023-12-31 20:02:40,560:INFO:Tuning with n_jobs=-1
2023-12-31 20:02:40,560:INFO:Initializing RandomizedSearchCV
2023-12-31 20:05:34,419:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.05}
2023-12-31 20:05:34,420:INFO:Hyperparameter search completed
2023-12-31 20:05:34,420:INFO:SubProcess create_model() called ==================================
2023-12-31 20:05:34,421:INFO:Initializing create_model()
2023-12-31 20:05:34,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7F82F7BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'n_estimators': 270, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.3, 'max_features': 'sqrt', 'max_depth': 6, 'learning_rate': 0.05})
2023-12-31 20:05:34,421:INFO:Checking exceptions
2023-12-31 20:05:34,421:INFO:Importing libraries
2023-12-31 20:05:34,421:INFO:Copying training dataset
2023-12-31 20:05:34,437:INFO:Defining folds
2023-12-31 20:05:34,437:INFO:Declaring metric variables
2023-12-31 20:05:34,444:INFO:Importing untrained model
2023-12-31 20:05:34,445:INFO:Declaring custom model
2023-12-31 20:05:34,451:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 20:05:34,459:INFO:Starting cross validation
2023-12-31 20:05:34,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:05:49,919:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:49,925:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:49,929:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:50,256:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:50,263:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:50,270:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,513:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,519:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,523:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,831:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,836:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:51,840:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:52,870:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:52,874:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:52,879:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:52,990:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:52,995:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,001:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,077:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,083:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,089:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,123:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,127:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:05:53,130:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,576:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,579:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,582:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,647:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,649:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,652:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:00,657:INFO:Calculating mean and std
2023-12-31 20:06:00,658:INFO:Creating metrics dataframe
2023-12-31 20:06:00,664:INFO:Finalizing model
2023-12-31 20:06:08,893:INFO:Uploading results into container
2023-12-31 20:06:08,895:INFO:Uploading model into container now
2023-12-31 20:06:08,896:INFO:_master_model_container: 16
2023-12-31 20:06:08,896:INFO:_display_container: 3
2023-12-31 20:06:08,897:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:06:08,897:INFO:create_model() successfully completed......................................
2023-12-31 20:06:09,028:INFO:SubProcess create_model() end ==================================
2023-12-31 20:06:09,028:INFO:choose_better activated
2023-12-31 20:06:09,032:INFO:SubProcess create_model() called ==================================
2023-12-31 20:06:09,033:INFO:Initializing create_model()
2023-12-31 20:06:09,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:06:09,033:INFO:Checking exceptions
2023-12-31 20:06:09,035:INFO:Importing libraries
2023-12-31 20:06:09,035:INFO:Copying training dataset
2023-12-31 20:06:09,047:INFO:Defining folds
2023-12-31 20:06:09,047:INFO:Declaring metric variables
2023-12-31 20:06:09,047:INFO:Importing untrained model
2023-12-31 20:06:09,047:INFO:Declaring custom model
2023-12-31 20:06:09,048:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 20:06:09,048:INFO:Starting cross validation
2023-12-31 20:06:09,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 20:06:29,490:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,494:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,500:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,769:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,774:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,778:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,798:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,803:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,807:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,811:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,815:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,820:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,839:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,843:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,848:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,881:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,886:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:29,889:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,041:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,043:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,046:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,114:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,116:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:30,118:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,344:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,347:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,349:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,424:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,427:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,429:WARNING:c:\Users\El-Wattaneya\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 20:06:42,434:INFO:Calculating mean and std
2023-12-31 20:06:42,435:INFO:Creating metrics dataframe
2023-12-31 20:06:42,437:INFO:Finalizing model
2023-12-31 20:06:55,617:INFO:Uploading results into container
2023-12-31 20:06:55,617:INFO:Uploading model into container now
2023-12-31 20:06:55,617:INFO:_master_model_container: 17
2023-12-31 20:06:55,617:INFO:_display_container: 4
2023-12-31 20:06:55,618:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:06:55,618:INFO:create_model() successfully completed......................................
2023-12-31 20:06:55,702:INFO:SubProcess create_model() end ==================================
2023-12-31 20:06:55,702:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9517
2023-12-31 20:06:55,703:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9524
2023-12-31 20:06:55,703:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2023-12-31 20:06:55,703:INFO:choose_better completed
2023-12-31 20:06:55,713:INFO:_master_model_container: 17
2023-12-31 20:06:55,713:INFO:_display_container: 3
2023-12-31 20:06:55,714:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:06:55,714:INFO:tune_model() successfully completed......................................
2023-12-31 20:06:55,852:INFO:Initializing evaluate_model()
2023-12-31 20:06:55,852:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-12-31 20:06:55,872:INFO:Initializing plot_model()
2023-12-31 20:06:55,872:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, system=True)
2023-12-31 20:06:55,872:INFO:Checking exceptions
2023-12-31 20:06:55,877:INFO:Preloading libraries
2023-12-31 20:06:55,955:INFO:Copying training dataset
2023-12-31 20:06:55,955:INFO:Plot type: pipeline
2023-12-31 20:06:56,107:INFO:Visual Rendered Successfully
2023-12-31 20:06:56,196:INFO:plot_model() successfully completed......................................
2023-12-31 20:06:56,200:INFO:Initializing predict_model()
2023-12-31 20:06:56,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A7F7B3BBE0>)
2023-12-31 20:06:56,200:INFO:Checking exceptions
2023-12-31 20:06:56,200:INFO:Preloading libraries
2023-12-31 20:06:56,582:INFO:Initializing finalize_model()
2023-12-31 20:06:56,582:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-31 20:06:56,583:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 20:06:56,588:INFO:Initializing create_model()
2023-12-31 20:06:56,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A7EEE6FD60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 20:06:56,588:INFO:Checking exceptions
2023-12-31 20:06:56,591:INFO:Importing libraries
2023-12-31 20:06:56,591:INFO:Copying training dataset
2023-12-31 20:06:56,591:INFO:Defining folds
2023-12-31 20:06:56,591:INFO:Declaring metric variables
2023-12-31 20:06:56,592:INFO:Importing untrained model
2023-12-31 20:06:56,592:INFO:Declaring custom model
2023-12-31 20:06:56,593:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 20:06:56,594:INFO:Cross validation set to False
2023-12-31 20:06:56,594:INFO:Fitting Model
2023-12-31 20:07:08,397:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 20:07:08,398:INFO:create_model() successfully completed......................................
2023-12-31 20:07:08,494:INFO:_master_model_container: 17
2023-12-31 20:07:08,495:INFO:_display_container: 4
2023-12-31 20:07:08,501:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 20:07:08,501:INFO:finalize_model() successfully completed......................................
2023-12-31 20:07:08,595:INFO:Initializing save_model()
2023-12-31 20:07:08,595:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=classification_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Public\Documents\Wondershare\CreatorTemp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mod...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-31 20:07:08,595:INFO:Adding model into prep_pipe
2023-12-31 20:07:08,595:WARNING:Only Model saved as it was a pipeline.
2023-12-31 20:07:08,627:INFO:classification_model.pkl saved in current working directory
2023-12-31 20:07:08,632:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 20:07:08,633:INFO:save_model() successfully completed......................................
2023-12-31 23:03:40,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 23:03:40,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 23:03:40,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 23:03:40,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-31 23:03:41,714:INFO:PyCaret ClassificationExperiment
2023-12-31 23:03:41,714:INFO:Logging name: clf-default-name
2023-12-31 23:03:41,714:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-31 23:03:41,714:INFO:version 3.2.0
2023-12-31 23:03:41,714:INFO:Initializing setup()
2023-12-31 23:03:41,714:INFO:self.USI: ea38
2023-12-31 23:03:41,715:INFO:self._variable_keys: {'target_param', 'exp_name_log', 'logging_param', 'fold_groups_param', 'X', '_ml_usecase', 'pipeline', 'data', 'gpu_n_jobs_param', 'n_jobs_param', 'y', 'X_test', 'seed', 'y_test', 'y_train', '_available_plots', 'memory', 'fold_shuffle_param', 'USI', 'fix_imbalance', 'is_multiclass', 'fold_generator', 'exp_id', 'log_plots_param', 'X_train', 'html_param', 'idx', 'gpu_param'}
2023-12-31 23:03:41,715:INFO:Checking environment
2023-12-31 23:03:41,715:INFO:python_version: 3.11.5
2023-12-31 23:03:41,715:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2023-12-31 23:03:41,715:INFO:machine: AMD64
2023-12-31 23:03:41,715:INFO:platform: Windows-10-10.0.19043-SP0
2023-12-31 23:03:41,723:INFO:Memory: svmem(total=8373604352, available=803901440, percent=90.4, used=7569702912, free=803901440)
2023-12-31 23:03:41,723:INFO:Physical Core: 4
2023-12-31 23:03:41,724:INFO:Logical Core: 8
2023-12-31 23:03:41,724:INFO:Checking libraries
2023-12-31 23:03:41,724:INFO:System:
2023-12-31 23:03:41,724:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2023-12-31 23:03:41,724:INFO:executable: c:\Program Files\Python311\python.exe
2023-12-31 23:03:41,724:INFO:   machine: Windows-10-10.0.19043-SP0
2023-12-31 23:03:41,724:INFO:PyCaret required dependencies:
2023-12-31 23:03:41,804:INFO:                 pip: 22.3.1
2023-12-31 23:03:41,804:INFO:          setuptools: 65.5.0
2023-12-31 23:03:41,805:INFO:             pycaret: 3.2.0
2023-12-31 23:03:41,805:INFO:             IPython: 8.17.1
2023-12-31 23:03:41,805:INFO:          ipywidgets: 8.1.1
2023-12-31 23:03:41,805:INFO:                tqdm: 4.66.1
2023-12-31 23:03:41,805:INFO:               numpy: 1.26.2
2023-12-31 23:03:41,806:INFO:              pandas: 1.5.3
2023-12-31 23:03:41,806:INFO:              jinja2: 3.1.2
2023-12-31 23:03:41,806:INFO:               scipy: 1.10.1
2023-12-31 23:03:41,806:INFO:              joblib: 1.3.2
2023-12-31 23:03:41,806:INFO:             sklearn: 1.3.2
2023-12-31 23:03:41,806:INFO:                pyod: 1.1.2
2023-12-31 23:03:41,806:INFO:            imblearn: 0.11.0
2023-12-31 23:03:41,806:INFO:   category_encoders: 2.6.3
2023-12-31 23:03:41,806:INFO:            lightgbm: 4.2.0
2023-12-31 23:03:41,806:INFO:               numba: 0.58.1
2023-12-31 23:03:41,807:INFO:            requests: 2.31.0
2023-12-31 23:03:41,807:INFO:          matplotlib: 3.6.0
2023-12-31 23:03:41,807:INFO:          scikitplot: 0.3.7
2023-12-31 23:03:41,807:INFO:         yellowbrick: 1.5
2023-12-31 23:03:41,807:INFO:              plotly: 5.18.0
2023-12-31 23:03:41,807:INFO:    plotly-resampler: Not installed
2023-12-31 23:03:41,807:INFO:             kaleido: 0.2.1
2023-12-31 23:03:41,807:INFO:           schemdraw: 0.15
2023-12-31 23:03:41,807:INFO:         statsmodels: 0.14.1
2023-12-31 23:03:41,807:INFO:              sktime: 0.21.1
2023-12-31 23:03:41,807:INFO:               tbats: 1.1.3
2023-12-31 23:03:41,807:INFO:            pmdarima: 2.0.4
2023-12-31 23:03:41,808:INFO:              psutil: 5.9.6
2023-12-31 23:03:41,808:INFO:          markupsafe: 2.1.3
2023-12-31 23:03:41,808:INFO:             pickle5: Not installed
2023-12-31 23:03:41,808:INFO:         cloudpickle: 3.0.0
2023-12-31 23:03:41,808:INFO:         deprecation: 2.1.0
2023-12-31 23:03:41,808:INFO:              xxhash: 3.4.1
2023-12-31 23:03:41,808:INFO:           wurlitzer: Not installed
2023-12-31 23:03:41,808:INFO:PyCaret optional dependencies:
2023-12-31 23:03:41,995:INFO:                shap: Not installed
2023-12-31 23:03:41,995:INFO:           interpret: Not installed
2023-12-31 23:03:41,995:INFO:                umap: Not installed
2023-12-31 23:03:41,995:INFO:     ydata_profiling: Not installed
2023-12-31 23:03:41,995:INFO:  explainerdashboard: Not installed
2023-12-31 23:03:41,996:INFO:             autoviz: Not installed
2023-12-31 23:03:41,996:INFO:           fairlearn: Not installed
2023-12-31 23:03:41,996:INFO:          deepchecks: Not installed
2023-12-31 23:03:41,996:INFO:             xgboost: 2.0.3
2023-12-31 23:03:41,996:INFO:            catboost: Not installed
2023-12-31 23:03:41,996:INFO:              kmodes: Not installed
2023-12-31 23:03:41,996:INFO:             mlxtend: Not installed
2023-12-31 23:03:41,996:INFO:       statsforecast: Not installed
2023-12-31 23:03:41,996:INFO:        tune_sklearn: Not installed
2023-12-31 23:03:41,996:INFO:                 ray: Not installed
2023-12-31 23:03:41,996:INFO:            hyperopt: Not installed
2023-12-31 23:03:41,997:INFO:              optuna: Not installed
2023-12-31 23:03:41,997:INFO:               skopt: Not installed
2023-12-31 23:03:41,997:INFO:              mlflow: Not installed
2023-12-31 23:03:41,997:INFO:              gradio: Not installed
2023-12-31 23:03:41,997:INFO:             fastapi: Not installed
2023-12-31 23:03:41,997:INFO:             uvicorn: Not installed
2023-12-31 23:03:41,997:INFO:              m2cgen: Not installed
2023-12-31 23:03:41,997:INFO:           evidently: Not installed
2023-12-31 23:03:41,997:INFO:               fugue: Not installed
2023-12-31 23:03:41,997:INFO:           streamlit: Not installed
2023-12-31 23:03:41,997:INFO:             prophet: Not installed
2023-12-31 23:03:41,998:INFO:None
2023-12-31 23:03:41,998:INFO:Set up data.
2023-12-31 23:03:42,047:INFO:Set up folding strategy.
2023-12-31 23:03:42,047:INFO:Set up train/test split.
2023-12-31 23:03:42,101:INFO:Set up index.
2023-12-31 23:03:42,103:INFO:Assigning column types.
2023-12-31 23:03:42,131:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-31 23:03:42,298:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-31 23:03:42,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 23:03:42,433:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:42,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:42,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-31 23:03:42,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 23:03:42,705:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:42,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:42,714:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-31 23:03:42,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 23:03:42,942:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:42,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:43,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-31 23:03:43,169:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:43,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:43,185:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-31 23:03:43,415:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:43,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:43,655:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:43,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:43,667:INFO:Preparing preprocessing pipeline...
2023-12-31 23:03:43,675:INFO:Set up label encoding.
2023-12-31 23:03:43,675:INFO:Set up simple imputation.
2023-12-31 23:03:43,845:INFO:Finished creating preprocessing pipeline.
2023-12-31 23:03:43,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\YASSMIN\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechines...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2023-12-31 23:03:43,856:INFO:Creating final display dataframe.
2023-12-31 23:03:44,200:INFO:Setup _display_container:                     Description                   Value
0                    Session id                      42
1                        Target          playlist_genre
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape             (24664, 15)
5        Transformed data shape             (24664, 15)
6   Transformed train set shape             (17264, 15)
7    Transformed test set shape              (7400, 15)
8              Numeric features                      14
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    ea38
2023-12-31 23:03:44,380:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:44,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:44,555:INFO:Soft dependency imported: xgboost: 2.0.3
2023-12-31 23:03:44,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-31 23:03:44,564:INFO:setup() successfully completed in 2.88s...............
2023-12-31 23:03:44,564:INFO:Initializing compare_models()
2023-12-31 23:03:44,564:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-12-31 23:03:44,564:INFO:Checking exceptions
2023-12-31 23:03:44,584:INFO:Preparing display monitor
2023-12-31 23:03:44,670:INFO:Initializing Logistic Regression
2023-12-31 23:03:44,671:INFO:Total runtime is 1.6649564107259113e-05 minutes
2023-12-31 23:03:44,678:INFO:SubProcess create_model() called ==================================
2023-12-31 23:03:44,678:INFO:Initializing create_model()
2023-12-31 23:03:44,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:03:44,678:INFO:Checking exceptions
2023-12-31 23:03:44,679:INFO:Importing libraries
2023-12-31 23:03:44,679:INFO:Copying training dataset
2023-12-31 23:03:44,712:INFO:Defining folds
2023-12-31 23:03:44,712:INFO:Declaring metric variables
2023-12-31 23:03:44,720:INFO:Importing untrained model
2023-12-31 23:03:44,727:INFO:Logistic Regression Imported successfully
2023-12-31 23:03:44,739:INFO:Starting cross validation
2023-12-31 23:03:44,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:01,527:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:01,532:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:01,538:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:02,358:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:02,445:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:02,450:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:04,737:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:04,742:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:04,747:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:08,903:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:08,934:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:08,939:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,271:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 23:04:09,279:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 23:04:09,335:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,337:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,340:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,341:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,344:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,345:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,495:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 23:04:09,551:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,555:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,561:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,809:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,814:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:09,853:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:11,896:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:11,918:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:11,924:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:11,984:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-31 23:04:12,037:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:12,052:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:12,058:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:12,187:INFO:Calculating mean and std
2023-12-31 23:04:12,291:INFO:Creating metrics dataframe
2023-12-31 23:04:12,364:INFO:Uploading results into container
2023-12-31 23:04:12,371:INFO:Uploading model into container now
2023-12-31 23:04:12,379:INFO:_master_model_container: 1
2023-12-31 23:04:12,379:INFO:_display_container: 2
2023-12-31 23:04:12,386:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-31 23:04:12,386:INFO:create_model() successfully completed......................................
2023-12-31 23:04:13,205:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:13,206:INFO:Creating metrics dataframe
2023-12-31 23:04:13,236:INFO:Initializing K Neighbors Classifier
2023-12-31 23:04:13,237:INFO:Total runtime is 0.47612104018529255 minutes
2023-12-31 23:04:13,245:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:13,245:INFO:Initializing create_model()
2023-12-31 23:04:13,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:13,246:INFO:Checking exceptions
2023-12-31 23:04:13,246:INFO:Importing libraries
2023-12-31 23:04:13,246:INFO:Copying training dataset
2023-12-31 23:04:13,292:INFO:Defining folds
2023-12-31 23:04:13,292:INFO:Declaring metric variables
2023-12-31 23:04:13,319:INFO:Importing untrained model
2023-12-31 23:04:13,326:INFO:K Neighbors Classifier Imported successfully
2023-12-31 23:04:13,343:INFO:Starting cross validation
2023-12-31 23:04:13,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:15,651:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,655:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,658:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,659:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,661:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,665:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,666:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,671:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,671:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,676:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,680:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,687:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,732:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,737:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,742:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,744:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,750:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,750:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,755:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,755:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,888:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,893:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:15,897:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,031:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,031:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,037:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,037:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,041:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,042:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,054:INFO:Calculating mean and std
2023-12-31 23:04:17,056:INFO:Creating metrics dataframe
2023-12-31 23:04:17,062:INFO:Uploading results into container
2023-12-31 23:04:17,063:INFO:Uploading model into container now
2023-12-31 23:04:17,064:INFO:_master_model_container: 2
2023-12-31 23:04:17,064:INFO:_display_container: 2
2023-12-31 23:04:17,064:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-31 23:04:17,064:INFO:create_model() successfully completed......................................
2023-12-31 23:04:17,276:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:17,276:INFO:Creating metrics dataframe
2023-12-31 23:04:17,292:INFO:Initializing Naive Bayes
2023-12-31 23:04:17,292:INFO:Total runtime is 0.5437007784843445 minutes
2023-12-31 23:04:17,297:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:17,298:INFO:Initializing create_model()
2023-12-31 23:04:17,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:17,298:INFO:Checking exceptions
2023-12-31 23:04:17,298:INFO:Importing libraries
2023-12-31 23:04:17,299:INFO:Copying training dataset
2023-12-31 23:04:17,321:INFO:Defining folds
2023-12-31 23:04:17,321:INFO:Declaring metric variables
2023-12-31 23:04:17,325:INFO:Importing untrained model
2023-12-31 23:04:17,331:INFO:Naive Bayes Imported successfully
2023-12-31 23:04:17,345:INFO:Starting cross validation
2023-12-31 23:04:17,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:17,613:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,620:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,628:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,635:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,637:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,638:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,640:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,644:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,658:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,662:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,676:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,680:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,691:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,728:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,735:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,738:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,740:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,742:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,745:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,750:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,755:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,758:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,761:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,780:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,796:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,803:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,806:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,824:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,828:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,835:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:17,849:INFO:Calculating mean and std
2023-12-31 23:04:17,851:INFO:Creating metrics dataframe
2023-12-31 23:04:17,856:INFO:Uploading results into container
2023-12-31 23:04:17,857:INFO:Uploading model into container now
2023-12-31 23:04:17,858:INFO:_master_model_container: 3
2023-12-31 23:04:17,858:INFO:_display_container: 2
2023-12-31 23:04:17,858:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-31 23:04:17,858:INFO:create_model() successfully completed......................................
2023-12-31 23:04:18,006:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:18,006:INFO:Creating metrics dataframe
2023-12-31 23:04:18,023:INFO:Initializing Decision Tree Classifier
2023-12-31 23:04:18,024:INFO:Total runtime is 0.5558972756067913 minutes
2023-12-31 23:04:18,028:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:18,028:INFO:Initializing create_model()
2023-12-31 23:04:18,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:18,028:INFO:Checking exceptions
2023-12-31 23:04:18,029:INFO:Importing libraries
2023-12-31 23:04:18,029:INFO:Copying training dataset
2023-12-31 23:04:18,046:INFO:Defining folds
2023-12-31 23:04:18,046:INFO:Declaring metric variables
2023-12-31 23:04:18,053:INFO:Importing untrained model
2023-12-31 23:04:18,058:INFO:Decision Tree Classifier Imported successfully
2023-12-31 23:04:18,067:INFO:Starting cross validation
2023-12-31 23:04:18,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:18,518:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,571:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,578:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,584:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,612:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,614:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,620:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,622:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,627:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,744:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,748:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,764:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,773:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,780:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,785:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,785:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,789:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,796:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,809:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,814:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,816:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,820:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,820:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,824:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,978:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,987:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:18,993:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:19,021:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:19,041:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:19,045:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:19,068:INFO:Calculating mean and std
2023-12-31 23:04:19,071:INFO:Creating metrics dataframe
2023-12-31 23:04:19,077:INFO:Uploading results into container
2023-12-31 23:04:19,078:INFO:Uploading model into container now
2023-12-31 23:04:19,079:INFO:_master_model_container: 4
2023-12-31 23:04:19,079:INFO:_display_container: 2
2023-12-31 23:04:19,080:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-12-31 23:04:19,081:INFO:create_model() successfully completed......................................
2023-12-31 23:04:19,378:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:19,379:INFO:Creating metrics dataframe
2023-12-31 23:04:19,408:INFO:Initializing SVM - Linear Kernel
2023-12-31 23:04:19,408:INFO:Total runtime is 0.5789740681648256 minutes
2023-12-31 23:04:19,415:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:19,416:INFO:Initializing create_model()
2023-12-31 23:04:19,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:19,417:INFO:Checking exceptions
2023-12-31 23:04:19,417:INFO:Importing libraries
2023-12-31 23:04:19,417:INFO:Copying training dataset
2023-12-31 23:04:19,436:INFO:Defining folds
2023-12-31 23:04:19,459:INFO:Declaring metric variables
2023-12-31 23:04:19,464:INFO:Importing untrained model
2023-12-31 23:04:19,473:INFO:SVM - Linear Kernel Imported successfully
2023-12-31 23:04:19,485:INFO:Starting cross validation
2023-12-31 23:04:19,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:22,751:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:22,754:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:22,758:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:22,760:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:22,762:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,419:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,421:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,426:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,428:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,431:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,486:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,487:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,539:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,542:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,543:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,607:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,620:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,625:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,627:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,629:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,662:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,664:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,677:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,680:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,691:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,693:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,695:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,700:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,713:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,716:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,717:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:23,719:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,719:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,728:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,736:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,737:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,737:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,739:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:23,740:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:23,742:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,004:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,007:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,011:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,012:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:25,015:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,121:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,124:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,128:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,130:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:25,134:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,191:INFO:Calculating mean and std
2023-12-31 23:04:25,193:INFO:Creating metrics dataframe
2023-12-31 23:04:25,199:INFO:Uploading results into container
2023-12-31 23:04:25,201:INFO:Uploading model into container now
2023-12-31 23:04:25,202:INFO:_master_model_container: 5
2023-12-31 23:04:25,203:INFO:_display_container: 2
2023-12-31 23:04:25,203:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-31 23:04:25,203:INFO:create_model() successfully completed......................................
2023-12-31 23:04:25,409:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:25,410:INFO:Creating metrics dataframe
2023-12-31 23:04:25,445:INFO:Initializing Ridge Classifier
2023-12-31 23:04:25,445:INFO:Total runtime is 0.6795854926109315 minutes
2023-12-31 23:04:25,450:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:25,451:INFO:Initializing create_model()
2023-12-31 23:04:25,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:25,451:INFO:Checking exceptions
2023-12-31 23:04:25,452:INFO:Importing libraries
2023-12-31 23:04:25,452:INFO:Copying training dataset
2023-12-31 23:04:25,490:INFO:Defining folds
2023-12-31 23:04:25,490:INFO:Declaring metric variables
2023-12-31 23:04:25,494:INFO:Importing untrained model
2023-12-31 23:04:25,498:INFO:Ridge Classifier Imported successfully
2023-12-31 23:04:25,508:INFO:Starting cross validation
2023-12-31 23:04:25,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:25,879:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,884:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,885:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,888:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,889:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,890:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:25,895:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,898:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,904:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,916:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,920:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,930:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,935:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,942:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,945:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,965:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,969:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,970:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,971:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,975:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,977:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,981:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,986:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:25,988:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,994:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,996:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:26,003:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,006:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:25,977:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:26,019:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:26,021:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,021:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,025:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,029:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,108:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:26,111:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,115:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,118:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:26,120:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,126:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_response.py", line 181, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\validation.py", line 1939, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2023-12-31 23:04:26,128:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,134:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,138:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:26,155:INFO:Calculating mean and std
2023-12-31 23:04:26,157:INFO:Creating metrics dataframe
2023-12-31 23:04:26,163:INFO:Uploading results into container
2023-12-31 23:04:26,164:INFO:Uploading model into container now
2023-12-31 23:04:26,165:INFO:_master_model_container: 6
2023-12-31 23:04:26,165:INFO:_display_container: 2
2023-12-31 23:04:26,166:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-12-31 23:04:26,166:INFO:create_model() successfully completed......................................
2023-12-31 23:04:26,348:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:26,400:INFO:Creating metrics dataframe
2023-12-31 23:04:26,590:INFO:Initializing Random Forest Classifier
2023-12-31 23:04:26,590:INFO:Total runtime is 0.6986659646034241 minutes
2023-12-31 23:04:26,597:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:26,598:INFO:Initializing create_model()
2023-12-31 23:04:26,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:26,599:INFO:Checking exceptions
2023-12-31 23:04:26,600:INFO:Importing libraries
2023-12-31 23:04:26,601:INFO:Copying training dataset
2023-12-31 23:04:26,623:INFO:Defining folds
2023-12-31 23:04:26,623:INFO:Declaring metric variables
2023-12-31 23:04:26,629:INFO:Importing untrained model
2023-12-31 23:04:26,634:INFO:Random Forest Classifier Imported successfully
2023-12-31 23:04:26,643:INFO:Starting cross validation
2023-12-31 23:04:26,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:36,726:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,731:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,736:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,750:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,751:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,755:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,755:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,759:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,760:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,760:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,764:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,786:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,791:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,796:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,827:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,944:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,949:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:36,955:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,219:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,224:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,228:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,238:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,243:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:37,247:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,009:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,014:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,018:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,408:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,412:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,418:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:40,438:INFO:Calculating mean and std
2023-12-31 23:04:40,440:INFO:Creating metrics dataframe
2023-12-31 23:04:40,446:INFO:Uploading results into container
2023-12-31 23:04:40,449:INFO:Uploading model into container now
2023-12-31 23:04:40,449:INFO:_master_model_container: 7
2023-12-31 23:04:40,450:INFO:_display_container: 2
2023-12-31 23:04:40,450:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-12-31 23:04:40,451:INFO:create_model() successfully completed......................................
2023-12-31 23:04:40,706:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:40,706:INFO:Creating metrics dataframe
2023-12-31 23:04:40,740:INFO:Initializing Quadratic Discriminant Analysis
2023-12-31 23:04:40,740:INFO:Total runtime is 0.9345001379648845 minutes
2023-12-31 23:04:40,745:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:40,746:INFO:Initializing create_model()
2023-12-31 23:04:40,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:40,747:INFO:Checking exceptions
2023-12-31 23:04:40,747:INFO:Importing libraries
2023-12-31 23:04:40,748:INFO:Copying training dataset
2023-12-31 23:04:40,803:INFO:Defining folds
2023-12-31 23:04:40,804:INFO:Declaring metric variables
2023-12-31 23:04:40,810:INFO:Importing untrained model
2023-12-31 23:04:40,823:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-31 23:04:40,898:INFO:Starting cross validation
2023-12-31 23:04:40,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:41,192:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,207:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,219:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,233:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,258:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,319:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,320:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,393:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,405:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,461:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,470:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,495:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,503:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,510:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,520:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,524:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,528:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,536:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,540:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,544:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,545:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:41,550:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,551:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,554:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,556:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,561:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,576:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,585:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,619:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,660:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,698:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,703:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,787:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,794:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-31 23:04:41,919:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,924:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,928:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,961:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,971:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:41,976:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:42,003:INFO:Calculating mean and std
2023-12-31 23:04:42,012:INFO:Creating metrics dataframe
2023-12-31 23:04:42,020:INFO:Uploading results into container
2023-12-31 23:04:42,021:INFO:Uploading model into container now
2023-12-31 23:04:42,022:INFO:_master_model_container: 8
2023-12-31 23:04:42,022:INFO:_display_container: 2
2023-12-31 23:04:42,023:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-31 23:04:42,023:INFO:create_model() successfully completed......................................
2023-12-31 23:04:42,288:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:42,288:INFO:Creating metrics dataframe
2023-12-31 23:04:42,335:INFO:Initializing Ada Boost Classifier
2023-12-31 23:04:42,335:INFO:Total runtime is 0.9610789140065512 minutes
2023-12-31 23:04:42,341:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:42,341:INFO:Initializing create_model()
2023-12-31 23:04:42,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:42,342:INFO:Checking exceptions
2023-12-31 23:04:42,342:INFO:Importing libraries
2023-12-31 23:04:42,342:INFO:Copying training dataset
2023-12-31 23:04:42,377:INFO:Defining folds
2023-12-31 23:04:42,377:INFO:Declaring metric variables
2023-12-31 23:04:42,386:INFO:Importing untrained model
2023-12-31 23:04:42,393:INFO:Ada Boost Classifier Imported successfully
2023-12-31 23:04:42,405:INFO:Starting cross validation
2023-12-31 23:04:42,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:04:45,989:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:45,993:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:45,995:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:45,998:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:45,998:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,003:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,003:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,007:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:46,040:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,043:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:46,046:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,049:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,096:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,102:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:46,104:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:46,108:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,082:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,095:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,099:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:47,101:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,131:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,136:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,140:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:47,156:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,161:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,163:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:47,167:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,190:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,199:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,206:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:47,208:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:47,217:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,233:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,240:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,243:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:49,246:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,365:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,373:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,378:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:04:49,383:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:04:49,407:INFO:Calculating mean and std
2023-12-31 23:04:49,409:INFO:Creating metrics dataframe
2023-12-31 23:04:49,417:INFO:Uploading results into container
2023-12-31 23:04:49,427:INFO:Uploading model into container now
2023-12-31 23:04:49,428:INFO:_master_model_container: 9
2023-12-31 23:04:49,428:INFO:_display_container: 2
2023-12-31 23:04:49,429:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-12-31 23:04:49,429:INFO:create_model() successfully completed......................................
2023-12-31 23:04:49,757:INFO:SubProcess create_model() end ==================================
2023-12-31 23:04:49,757:INFO:Creating metrics dataframe
2023-12-31 23:04:49,792:INFO:Initializing Gradient Boosting Classifier
2023-12-31 23:04:49,792:INFO:Total runtime is 1.0853580991427105 minutes
2023-12-31 23:04:49,798:INFO:SubProcess create_model() called ==================================
2023-12-31 23:04:49,799:INFO:Initializing create_model()
2023-12-31 23:04:49,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:04:49,799:INFO:Checking exceptions
2023-12-31 23:04:49,799:INFO:Importing libraries
2023-12-31 23:04:49,799:INFO:Copying training dataset
2023-12-31 23:04:49,831:INFO:Defining folds
2023-12-31 23:04:49,831:INFO:Declaring metric variables
2023-12-31 23:04:49,836:INFO:Importing untrained model
2023-12-31 23:04:49,843:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 23:04:49,859:INFO:Starting cross validation
2023-12-31 23:04:49,860:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:05:54,778:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:54,786:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:54,790:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:56,216:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:56,222:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:56,227:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:57,480:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:57,484:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:57,488:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,260:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,267:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,273:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,709:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,714:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,719:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,991:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:58,996:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:59,002:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:59,556:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:59,600:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:05:59,605:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:00,534:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:00,540:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:00,546:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,373:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,378:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,382:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,526:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,532:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,540:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:36,635:INFO:Calculating mean and std
2023-12-31 23:06:36,741:INFO:Creating metrics dataframe
2023-12-31 23:06:36,861:INFO:Uploading results into container
2023-12-31 23:06:36,867:INFO:Uploading model into container now
2023-12-31 23:06:36,881:INFO:_master_model_container: 10
2023-12-31 23:06:36,882:INFO:_display_container: 2
2023-12-31 23:06:36,890:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:06:36,891:INFO:create_model() successfully completed......................................
2023-12-31 23:06:37,842:INFO:SubProcess create_model() end ==================================
2023-12-31 23:06:37,843:INFO:Creating metrics dataframe
2023-12-31 23:06:37,882:INFO:Initializing Linear Discriminant Analysis
2023-12-31 23:06:37,882:INFO:Total runtime is 2.8868590156237284 minutes
2023-12-31 23:06:37,889:INFO:SubProcess create_model() called ==================================
2023-12-31 23:06:37,890:INFO:Initializing create_model()
2023-12-31 23:06:37,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:06:37,890:INFO:Checking exceptions
2023-12-31 23:06:37,891:INFO:Importing libraries
2023-12-31 23:06:37,891:INFO:Copying training dataset
2023-12-31 23:06:37,935:INFO:Defining folds
2023-12-31 23:06:37,935:INFO:Declaring metric variables
2023-12-31 23:06:37,942:INFO:Importing untrained model
2023-12-31 23:06:37,948:INFO:Linear Discriminant Analysis Imported successfully
2023-12-31 23:06:37,962:INFO:Starting cross validation
2023-12-31 23:06:37,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:06:38,493:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,497:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,502:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,524:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,529:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,571:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,580:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,584:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,588:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,591:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,596:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,601:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,603:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,605:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,608:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,609:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,612:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,614:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,628:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,633:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,639:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,639:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,643:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,644:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,800:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,805:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,809:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,872:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,877:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,881:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:38,906:INFO:Calculating mean and std
2023-12-31 23:06:38,908:INFO:Creating metrics dataframe
2023-12-31 23:06:38,913:INFO:Uploading results into container
2023-12-31 23:06:38,914:INFO:Uploading model into container now
2023-12-31 23:06:38,914:INFO:_master_model_container: 11
2023-12-31 23:06:38,914:INFO:_display_container: 2
2023-12-31 23:06:38,915:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-31 23:06:38,915:INFO:create_model() successfully completed......................................
2023-12-31 23:06:39,075:INFO:SubProcess create_model() end ==================================
2023-12-31 23:06:39,075:INFO:Creating metrics dataframe
2023-12-31 23:06:39,102:INFO:Initializing Extra Trees Classifier
2023-12-31 23:06:39,102:INFO:Total runtime is 2.9071913162867227 minutes
2023-12-31 23:06:39,111:INFO:SubProcess create_model() called ==================================
2023-12-31 23:06:39,111:INFO:Initializing create_model()
2023-12-31 23:06:39,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:06:39,112:INFO:Checking exceptions
2023-12-31 23:06:39,112:INFO:Importing libraries
2023-12-31 23:06:39,112:INFO:Copying training dataset
2023-12-31 23:06:39,131:INFO:Defining folds
2023-12-31 23:06:39,131:INFO:Declaring metric variables
2023-12-31 23:06:39,136:INFO:Importing untrained model
2023-12-31 23:06:39,142:INFO:Extra Trees Classifier Imported successfully
2023-12-31 23:06:39,161:INFO:Starting cross validation
2023-12-31 23:06:39,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:06:44,249:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,255:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,260:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,291:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,295:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,296:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,300:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,301:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,306:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,306:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,311:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,316:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,348:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,355:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,360:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,377:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,384:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,391:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,495:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,507:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,551:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,589:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,595:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:44,601:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,461:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,471:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,473:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,476:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,478:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,481:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:46,506:INFO:Calculating mean and std
2023-12-31 23:06:46,509:INFO:Creating metrics dataframe
2023-12-31 23:06:46,516:INFO:Uploading results into container
2023-12-31 23:06:46,517:INFO:Uploading model into container now
2023-12-31 23:06:46,518:INFO:_master_model_container: 12
2023-12-31 23:06:46,518:INFO:_display_container: 2
2023-12-31 23:06:46,519:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-12-31 23:06:46,520:INFO:create_model() successfully completed......................................
2023-12-31 23:06:46,792:INFO:SubProcess create_model() end ==================================
2023-12-31 23:06:46,793:INFO:Creating metrics dataframe
2023-12-31 23:06:46,832:INFO:Initializing Extreme Gradient Boosting
2023-12-31 23:06:46,832:INFO:Total runtime is 3.036037266254425 minutes
2023-12-31 23:06:46,841:INFO:SubProcess create_model() called ==================================
2023-12-31 23:06:46,842:INFO:Initializing create_model()
2023-12-31 23:06:46,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:06:46,843:INFO:Checking exceptions
2023-12-31 23:06:46,843:INFO:Importing libraries
2023-12-31 23:06:46,843:INFO:Copying training dataset
2023-12-31 23:06:46,917:INFO:Defining folds
2023-12-31 23:06:46,917:INFO:Declaring metric variables
2023-12-31 23:06:46,927:INFO:Importing untrained model
2023-12-31 23:06:46,966:INFO:Extreme Gradient Boosting Imported successfully
2023-12-31 23:06:46,982:INFO:Starting cross validation
2023-12-31 23:06:46,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:06:53,259:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,264:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,272:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,283:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,291:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,296:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,482:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,486:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,489:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,491:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,494:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,528:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,533:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,539:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,549:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,555:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,559:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,606:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,639:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,643:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,648:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,693:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,697:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:53,705:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,337:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,357:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,362:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,493:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,498:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,505:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:06:56,522:INFO:Calculating mean and std
2023-12-31 23:06:56,524:INFO:Creating metrics dataframe
2023-12-31 23:06:56,531:INFO:Uploading results into container
2023-12-31 23:06:56,532:INFO:Uploading model into container now
2023-12-31 23:06:56,533:INFO:_master_model_container: 13
2023-12-31 23:06:56,533:INFO:_display_container: 2
2023-12-31 23:06:56,535:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-12-31 23:06:56,536:INFO:create_model() successfully completed......................................
2023-12-31 23:06:56,671:INFO:SubProcess create_model() end ==================================
2023-12-31 23:06:56,671:INFO:Creating metrics dataframe
2023-12-31 23:06:56,693:INFO:Initializing Light Gradient Boosting Machine
2023-12-31 23:06:56,693:INFO:Total runtime is 3.200388789176941 minutes
2023-12-31 23:06:56,697:INFO:SubProcess create_model() called ==================================
2023-12-31 23:06:56,697:INFO:Initializing create_model()
2023-12-31 23:06:56,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:06:56,697:INFO:Checking exceptions
2023-12-31 23:06:56,697:INFO:Importing libraries
2023-12-31 23:06:56,697:INFO:Copying training dataset
2023-12-31 23:06:56,713:INFO:Defining folds
2023-12-31 23:06:56,713:INFO:Declaring metric variables
2023-12-31 23:06:56,717:INFO:Importing untrained model
2023-12-31 23:06:56,725:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-31 23:06:56,733:INFO:Starting cross validation
2023-12-31 23:06:56,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:08:09,314:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,318:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,322:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,335:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,340:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,344:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,365:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,372:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,376:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,424:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,431:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:09,435:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,774:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,796:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,803:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,821:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,825:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,829:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,912:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,917:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:24,922:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:25,162:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:25,168:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:25,173:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:49,895:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:49,900:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:49,905:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:50,221:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:50,227:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:50,231:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:50,294:INFO:Calculating mean and std
2023-12-31 23:08:50,369:INFO:Creating metrics dataframe
2023-12-31 23:08:50,447:INFO:Uploading results into container
2023-12-31 23:08:50,458:INFO:Uploading model into container now
2023-12-31 23:08:50,464:INFO:_master_model_container: 14
2023-12-31 23:08:50,464:INFO:_display_container: 2
2023-12-31 23:08:50,469:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-31 23:08:50,470:INFO:create_model() successfully completed......................................
2023-12-31 23:08:52,198:INFO:SubProcess create_model() end ==================================
2023-12-31 23:08:52,199:INFO:Creating metrics dataframe
2023-12-31 23:08:52,254:INFO:Initializing Dummy Classifier
2023-12-31 23:08:52,254:INFO:Total runtime is 5.126403510570526 minutes
2023-12-31 23:08:52,263:INFO:SubProcess create_model() called ==================================
2023-12-31 23:08:52,264:INFO:Initializing create_model()
2023-12-31 23:08:52,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAB19FB750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:08:52,265:INFO:Checking exceptions
2023-12-31 23:08:52,265:INFO:Importing libraries
2023-12-31 23:08:52,267:INFO:Copying training dataset
2023-12-31 23:08:52,304:INFO:Defining folds
2023-12-31 23:08:52,304:INFO:Declaring metric variables
2023-12-31 23:08:52,311:INFO:Importing untrained model
2023-12-31 23:08:52,317:INFO:Dummy Classifier Imported successfully
2023-12-31 23:08:52,328:INFO:Starting cross validation
2023-12-31 23:08:52,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:08:52,660:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,665:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,668:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,670:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,704:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,720:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,745:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,752:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,772:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,778:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,783:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,786:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,786:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,789:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,789:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,789:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,795:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,798:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,801:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,838:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,847:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,851:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, msg_start, len(result))

2023-12-31 23:08:52,854:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,855:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,859:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,861:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,864:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,919:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,923:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,927:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,937:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,938:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,946:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,948:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,976:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,986:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:52,988:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-31 23:08:52,994:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:53,050:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:08:53,335:INFO:Calculating mean and std
2023-12-31 23:08:53,338:INFO:Creating metrics dataframe
2023-12-31 23:08:53,349:INFO:Uploading results into container
2023-12-31 23:08:53,388:INFO:Uploading model into container now
2023-12-31 23:08:53,389:INFO:_master_model_container: 15
2023-12-31 23:08:53,389:INFO:_display_container: 2
2023-12-31 23:08:53,389:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-12-31 23:08:53,389:INFO:create_model() successfully completed......................................
2023-12-31 23:08:53,753:INFO:SubProcess create_model() end ==================================
2023-12-31 23:08:53,753:INFO:Creating metrics dataframe
2023-12-31 23:08:53,879:INFO:Initializing create_model()
2023-12-31 23:08:53,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:08:53,880:INFO:Checking exceptions
2023-12-31 23:08:53,889:INFO:Importing libraries
2023-12-31 23:08:53,890:INFO:Copying training dataset
2023-12-31 23:08:53,944:INFO:Defining folds
2023-12-31 23:08:53,944:INFO:Declaring metric variables
2023-12-31 23:08:53,945:INFO:Importing untrained model
2023-12-31 23:08:53,945:INFO:Declaring custom model
2023-12-31 23:08:53,946:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 23:08:53,948:INFO:Cross validation set to False
2023-12-31 23:08:53,948:INFO:Fitting Model
2023-12-31 23:09:35,417:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:09:35,420:INFO:create_model() successfully completed......................................
2023-12-31 23:09:36,078:INFO:_master_model_container: 15
2023-12-31 23:09:36,078:INFO:_display_container: 2
2023-12-31 23:09:36,079:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:09:36,079:INFO:compare_models() successfully completed......................................
2023-12-31 23:09:36,094:INFO:Initializing tune_model()
2023-12-31 23:09:36,094:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-12-31 23:09:36,094:INFO:Checking exceptions
2023-12-31 23:09:36,162:INFO:Copying training dataset
2023-12-31 23:09:36,202:INFO:Checking base model
2023-12-31 23:09:36,204:INFO:Base model : Gradient Boosting Classifier
2023-12-31 23:09:36,215:INFO:Declaring metric variables
2023-12-31 23:09:36,223:INFO:Defining Hyperparameters
2023-12-31 23:09:36,684:INFO:Tuning with n_jobs=-1
2023-12-31 23:09:36,685:INFO:Initializing RandomizedSearchCV
2023-12-31 23:16:58,280:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.05}
2023-12-31 23:16:58,516:INFO:Hyperparameter search completed
2023-12-31 23:16:58,517:INFO:SubProcess create_model() called ==================================
2023-12-31 23:16:58,553:INFO:Initializing create_model()
2023-12-31 23:16:58,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EAA7CDE7D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'n_estimators': 270, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.3, 'max_features': 'sqrt', 'max_depth': 6, 'learning_rate': 0.05})
2023-12-31 23:16:58,557:INFO:Checking exceptions
2023-12-31 23:16:58,561:INFO:Importing libraries
2023-12-31 23:16:58,572:INFO:Copying training dataset
2023-12-31 23:16:58,744:INFO:Defining folds
2023-12-31 23:16:58,748:INFO:Declaring metric variables
2023-12-31 23:16:58,884:INFO:Importing untrained model
2023-12-31 23:16:58,885:INFO:Declaring custom model
2023-12-31 23:16:58,937:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 23:16:58,957:INFO:Starting cross validation
2023-12-31 23:16:58,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:17:29,300:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:29,378:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:29,382:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,133:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,143:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,148:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,500:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,514:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:30,519:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,246:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,256:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,261:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,665:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,718:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,723:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,831:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,843:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:31,848:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:32,467:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:32,485:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:32,489:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:33,196:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:33,206:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:33,231:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,121:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,137:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,141:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,495:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,499:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,504:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:17:52,552:INFO:Calculating mean and std
2023-12-31 23:17:52,558:INFO:Creating metrics dataframe
2023-12-31 23:17:52,601:INFO:Finalizing model
2023-12-31 23:18:22,548:INFO:Uploading results into container
2023-12-31 23:18:22,556:INFO:Uploading model into container now
2023-12-31 23:18:22,580:INFO:_master_model_container: 16
2023-12-31 23:18:22,581:INFO:_display_container: 3
2023-12-31 23:18:22,590:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:18:22,591:INFO:create_model() successfully completed......................................
2023-12-31 23:18:25,004:INFO:SubProcess create_model() end ==================================
2023-12-31 23:18:25,005:INFO:choose_better activated
2023-12-31 23:18:25,043:INFO:SubProcess create_model() called ==================================
2023-12-31 23:18:25,045:INFO:Initializing create_model()
2023-12-31 23:18:25,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:18:25,045:INFO:Checking exceptions
2023-12-31 23:18:25,058:INFO:Importing libraries
2023-12-31 23:18:25,058:INFO:Copying training dataset
2023-12-31 23:18:25,102:INFO:Defining folds
2023-12-31 23:18:25,103:INFO:Declaring metric variables
2023-12-31 23:18:25,103:INFO:Importing untrained model
2023-12-31 23:18:25,103:INFO:Declaring custom model
2023-12-31 23:18:25,105:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 23:18:25,106:INFO:Starting cross validation
2023-12-31 23:18:25,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-31 23:19:27,659:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:27,713:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:27,718:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:29,693:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:29,702:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:29,707:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:30,891:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:30,902:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:30,908:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:33,685:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:33,692:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:33,698:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,670:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,677:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,682:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,845:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,855:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,859:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:34,998:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:35,011:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:35,015:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:35,827:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:35,837:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:19:35,842:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:12,062:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:12,068:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:12,073:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:13,052:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:13,057:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:13,064:WARNING:C:\Users\YASSMIN\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1523: UserWarning: Note that pos_label (set to 4) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-31 23:20:13,137:INFO:Calculating mean and std
2023-12-31 23:20:13,153:INFO:Creating metrics dataframe
2023-12-31 23:20:13,229:INFO:Finalizing model
2023-12-31 23:20:53,389:INFO:Uploading results into container
2023-12-31 23:20:53,402:INFO:Uploading model into container now
2023-12-31 23:20:53,429:INFO:_master_model_container: 17
2023-12-31 23:20:53,429:INFO:_display_container: 4
2023-12-31 23:20:53,438:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:20:53,438:INFO:create_model() successfully completed......................................
2023-12-31 23:20:54,544:INFO:SubProcess create_model() end ==================================
2023-12-31 23:20:54,545:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9517
2023-12-31 23:20:54,546:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9524
2023-12-31 23:20:54,546:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2023-12-31 23:20:54,546:INFO:choose_better completed
2023-12-31 23:20:54,592:INFO:_master_model_container: 17
2023-12-31 23:20:54,592:INFO:_display_container: 3
2023-12-31 23:20:54,593:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:20:54,593:INFO:tune_model() successfully completed......................................
2023-12-31 23:20:54,752:INFO:Initializing evaluate_model()
2023-12-31 23:20:54,752:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-12-31 23:20:54,819:INFO:Initializing plot_model()
2023-12-31 23:20:54,819:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2023-12-31 23:20:54,820:INFO:Checking exceptions
2023-12-31 23:20:54,838:INFO:Preloading libraries
2023-12-31 23:20:55,017:INFO:Copying training dataset
2023-12-31 23:20:55,017:INFO:Plot type: pipeline
2023-12-31 23:20:55,577:INFO:Visual Rendered Successfully
2023-12-31 23:20:55,725:INFO:plot_model() successfully completed......................................
2023-12-31 23:20:55,729:INFO:Initializing predict_model()
2023-12-31 23:20:55,729:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAB2AE7E20>)
2023-12-31 23:20:55,729:INFO:Checking exceptions
2023-12-31 23:20:55,730:INFO:Preloading libraries
2023-12-31 23:20:56,434:INFO:Initializing finalize_model()
2023-12-31 23:20:56,434:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-31 23:20:56,435:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-31 23:20:56,444:INFO:Initializing create_model()
2023-12-31 23:20:56,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EAA81D1BD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.05, loss='log_loss', max_depth=6,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=4,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=42, subsample=0.7, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-31 23:20:56,444:INFO:Checking exceptions
2023-12-31 23:20:56,448:INFO:Importing libraries
2023-12-31 23:20:56,448:INFO:Copying training dataset
2023-12-31 23:20:56,449:INFO:Defining folds
2023-12-31 23:20:56,449:INFO:Declaring metric variables
2023-12-31 23:20:56,450:INFO:Importing untrained model
2023-12-31 23:20:56,450:INFO:Declaring custom model
2023-12-31 23:20:56,451:INFO:Gradient Boosting Classifier Imported successfully
2023-12-31 23:20:56,452:INFO:Cross validation set to False
2023-12-31 23:20:56,452:INFO:Fitting Model
2023-12-31 23:21:29,427:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 23:21:29,427:INFO:create_model() successfully completed......................................
2023-12-31 23:21:29,737:INFO:_master_model_container: 17
2023-12-31 23:21:29,738:INFO:_display_container: 4
2023-12-31 23:21:29,755:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 23:21:29,756:INFO:finalize_model() successfully completed......................................
2023-12-31 23:21:29,942:INFO:Initializing save_model()
2023-12-31 23:21:29,942:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=classification_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\YASSMIN\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechines...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-31 23:21:29,942:INFO:Adding model into prep_pipe
2023-12-31 23:21:29,942:WARNING:Only Model saved as it was a pipeline.
2023-12-31 23:21:30,038:INFO:classification_model.pkl saved in current working directory
2023-12-31 23:21:30,046:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['track_popularity',
                                             'playlist_subgenre',
                                             'danceability', 'energy', 'key',
                                             'loudness', 'mode', 'speechiness',
                                             'acousticness', 'instrumentalness',
                                             'live...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.05, loss='log_loss',
                                            max_depth=6, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.3,
                                            min_samples_leaf=4,
                                            min_samples_split=10,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=270,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-31 23:21:30,046:INFO:save_model() successfully completed......................................
